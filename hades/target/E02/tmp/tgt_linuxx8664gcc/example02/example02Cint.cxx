//
// File generated by rootcint at Tue Jun 24 17:40:10 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIvol0dIpandadIworkdIhadesdItargetdIE02dItmpdItgt_linuxx8664gccdIexample02dIexample02Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "example02Cint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void Ex02ChamberParameterisation_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_Ex02ChamberParameterisation(void *p);
   static void deleteArray_Ex02ChamberParameterisation(void *p);
   static void destruct_Ex02ChamberParameterisation(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Ex02ChamberParameterisation*)
   {
      ::Ex02ChamberParameterisation *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Ex02ChamberParameterisation >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Ex02ChamberParameterisation", ::Ex02ChamberParameterisation::Class_Version(), "./include/Ex02ChamberParameterisation.h", 37,
                  typeid(::Ex02ChamberParameterisation), DefineBehavior(ptr, ptr),
                  &::Ex02ChamberParameterisation::Dictionary, isa_proxy, 4,
                  sizeof(::Ex02ChamberParameterisation) );
      instance.SetDelete(&delete_Ex02ChamberParameterisation);
      instance.SetDeleteArray(&deleteArray_Ex02ChamberParameterisation);
      instance.SetDestructor(&destruct_Ex02ChamberParameterisation);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Ex02ChamberParameterisation*)
   {
      return GenerateInitInstanceLocal((::Ex02ChamberParameterisation*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Ex02ChamberParameterisation*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Ex02DetectorConstruction_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Ex02DetectorConstruction(void *p = 0);
   static void *newArray_Ex02DetectorConstruction(Long_t size, void *p);
   static void delete_Ex02DetectorConstruction(void *p);
   static void deleteArray_Ex02DetectorConstruction(void *p);
   static void destruct_Ex02DetectorConstruction(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Ex02DetectorConstruction*)
   {
      ::Ex02DetectorConstruction *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Ex02DetectorConstruction >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Ex02DetectorConstruction", ::Ex02DetectorConstruction::Class_Version(), "./include/Ex02DetectorConstruction.h", 34,
                  typeid(::Ex02DetectorConstruction), DefineBehavior(ptr, ptr),
                  &::Ex02DetectorConstruction::Dictionary, isa_proxy, 4,
                  sizeof(::Ex02DetectorConstruction) );
      instance.SetNew(&new_Ex02DetectorConstruction);
      instance.SetNewArray(&newArray_Ex02DetectorConstruction);
      instance.SetDelete(&delete_Ex02DetectorConstruction);
      instance.SetDeleteArray(&deleteArray_Ex02DetectorConstruction);
      instance.SetDestructor(&destruct_Ex02DetectorConstruction);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Ex02DetectorConstruction*)
   {
      return GenerateInitInstanceLocal((::Ex02DetectorConstruction*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Ex02DetectorConstruction*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Ex02DetectorConstructionOld_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Ex02DetectorConstructionOld(void *p = 0);
   static void *newArray_Ex02DetectorConstructionOld(Long_t size, void *p);
   static void delete_Ex02DetectorConstructionOld(void *p);
   static void deleteArray_Ex02DetectorConstructionOld(void *p);
   static void destruct_Ex02DetectorConstructionOld(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Ex02DetectorConstructionOld*)
   {
      ::Ex02DetectorConstructionOld *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Ex02DetectorConstructionOld >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Ex02DetectorConstructionOld", ::Ex02DetectorConstructionOld::Class_Version(), "./include/Ex02DetectorConstructionOld.h", 34,
                  typeid(::Ex02DetectorConstructionOld), DefineBehavior(ptr, ptr),
                  &::Ex02DetectorConstructionOld::Dictionary, isa_proxy, 4,
                  sizeof(::Ex02DetectorConstructionOld) );
      instance.SetNew(&new_Ex02DetectorConstructionOld);
      instance.SetNewArray(&newArray_Ex02DetectorConstructionOld);
      instance.SetDelete(&delete_Ex02DetectorConstructionOld);
      instance.SetDeleteArray(&deleteArray_Ex02DetectorConstructionOld);
      instance.SetDestructor(&destruct_Ex02DetectorConstructionOld);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Ex02DetectorConstructionOld*)
   {
      return GenerateInitInstanceLocal((::Ex02DetectorConstructionOld*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Ex02DetectorConstructionOld*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Ex02MagField_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Ex02MagField(void *p = 0);
   static void *newArray_Ex02MagField(Long_t size, void *p);
   static void delete_Ex02MagField(void *p);
   static void deleteArray_Ex02MagField(void *p);
   static void destruct_Ex02MagField(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Ex02MagField*)
   {
      ::Ex02MagField *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Ex02MagField >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Ex02MagField", ::Ex02MagField::Class_Version(), "./include/Ex02MagField.h", 38,
                  typeid(::Ex02MagField), DefineBehavior(ptr, ptr),
                  &::Ex02MagField::Dictionary, isa_proxy, 4,
                  sizeof(::Ex02MagField) );
      instance.SetNew(&new_Ex02MagField);
      instance.SetNewArray(&newArray_Ex02MagField);
      instance.SetDelete(&delete_Ex02MagField);
      instance.SetDeleteArray(&deleteArray_Ex02MagField);
      instance.SetDestructor(&destruct_Ex02MagField);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Ex02MagField*)
   {
      return GenerateInitInstanceLocal((::Ex02MagField*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Ex02MagField*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Ex02TrackerHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Ex02TrackerHit(void *p = 0);
   static void *newArray_Ex02TrackerHit(Long_t size, void *p);
   static void delete_Ex02TrackerHit(void *p);
   static void deleteArray_Ex02TrackerHit(void *p);
   static void destruct_Ex02TrackerHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Ex02TrackerHit*)
   {
      ::Ex02TrackerHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Ex02TrackerHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Ex02TrackerHit", ::Ex02TrackerHit::Class_Version(), "./include/Ex02TrackerHit.h", 34,
                  typeid(::Ex02TrackerHit), DefineBehavior(ptr, ptr),
                  &::Ex02TrackerHit::Dictionary, isa_proxy, 4,
                  sizeof(::Ex02TrackerHit) );
      instance.SetNew(&new_Ex02TrackerHit);
      instance.SetNewArray(&newArray_Ex02TrackerHit);
      instance.SetDelete(&delete_Ex02TrackerHit);
      instance.SetDeleteArray(&deleteArray_Ex02TrackerHit);
      instance.SetDestructor(&destruct_Ex02TrackerHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Ex02TrackerHit*)
   {
      return GenerateInitInstanceLocal((::Ex02TrackerHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Ex02TrackerHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Ex02TrackerSD_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Ex02TrackerSD(void *p = 0);
   static void *newArray_Ex02TrackerSD(Long_t size, void *p);
   static void delete_Ex02TrackerSD(void *p);
   static void deleteArray_Ex02TrackerSD(void *p);
   static void destruct_Ex02TrackerSD(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Ex02TrackerSD*)
   {
      ::Ex02TrackerSD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Ex02TrackerSD >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Ex02TrackerSD", ::Ex02TrackerSD::Class_Version(), "./include/Ex02TrackerSD.h", 36,
                  typeid(::Ex02TrackerSD), DefineBehavior(ptr, ptr),
                  &::Ex02TrackerSD::Dictionary, isa_proxy, 4,
                  sizeof(::Ex02TrackerSD) );
      instance.SetNew(&new_Ex02TrackerSD);
      instance.SetNewArray(&newArray_Ex02TrackerSD);
      instance.SetDelete(&delete_Ex02TrackerSD);
      instance.SetDeleteArray(&deleteArray_Ex02TrackerSD);
      instance.SetDestructor(&destruct_Ex02TrackerSD);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Ex02TrackerSD*)
   {
      return GenerateInitInstanceLocal((::Ex02TrackerSD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Ex02TrackerSD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Ex02RootManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Ex02RootManager(void *p = 0);
   static void *newArray_Ex02RootManager(Long_t size, void *p);
   static void delete_Ex02RootManager(void *p);
   static void deleteArray_Ex02RootManager(void *p);
   static void destruct_Ex02RootManager(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Ex02RootManager*)
   {
      ::Ex02RootManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Ex02RootManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Ex02RootManager", ::Ex02RootManager::Class_Version(), "./include/Ex02RootManager.h", 45,
                  typeid(::Ex02RootManager), DefineBehavior(ptr, ptr),
                  &::Ex02RootManager::Dictionary, isa_proxy, 4,
                  sizeof(::Ex02RootManager) );
      instance.SetNew(&new_Ex02RootManager);
      instance.SetNewArray(&newArray_Ex02RootManager);
      instance.SetDelete(&delete_Ex02RootManager);
      instance.SetDeleteArray(&deleteArray_Ex02RootManager);
      instance.SetDestructor(&destruct_Ex02RootManager);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Ex02RootManager*)
   {
      return GenerateInitInstanceLocal((::Ex02RootManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Ex02RootManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Ex02MCStack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Ex02MCStack(void *p = 0);
   static void *newArray_Ex02MCStack(Long_t size, void *p);
   static void delete_Ex02MCStack(void *p);
   static void deleteArray_Ex02MCStack(void *p);
   static void destruct_Ex02MCStack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Ex02MCStack*)
   {
      ::Ex02MCStack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Ex02MCStack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Ex02MCStack", ::Ex02MCStack::Class_Version(), "./include/Ex02MCStack.h", 35,
                  typeid(::Ex02MCStack), DefineBehavior(ptr, ptr),
                  &::Ex02MCStack::Dictionary, isa_proxy, 4,
                  sizeof(::Ex02MCStack) );
      instance.SetNew(&new_Ex02MCStack);
      instance.SetNewArray(&newArray_Ex02MCStack);
      instance.SetDelete(&delete_Ex02MCStack);
      instance.SetDeleteArray(&deleteArray_Ex02MCStack);
      instance.SetDestructor(&destruct_Ex02MCStack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Ex02MCStack*)
   {
      return GenerateInitInstanceLocal((::Ex02MCStack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Ex02MCStack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Ex02MCApplication_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Ex02MCApplication(void *p = 0);
   static void *newArray_Ex02MCApplication(Long_t size, void *p);
   static void delete_Ex02MCApplication(void *p);
   static void deleteArray_Ex02MCApplication(void *p);
   static void destruct_Ex02MCApplication(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Ex02MCApplication*)
   {
      ::Ex02MCApplication *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Ex02MCApplication >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Ex02MCApplication", ::Ex02MCApplication::Class_Version(), "./include/Ex02MCApplication.h", 39,
                  typeid(::Ex02MCApplication), DefineBehavior(ptr, ptr),
                  &::Ex02MCApplication::Dictionary, isa_proxy, 4,
                  sizeof(::Ex02MCApplication) );
      instance.SetNew(&new_Ex02MCApplication);
      instance.SetNewArray(&newArray_Ex02MCApplication);
      instance.SetDelete(&delete_Ex02MCApplication);
      instance.SetDeleteArray(&deleteArray_Ex02MCApplication);
      instance.SetDestructor(&destruct_Ex02MCApplication);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Ex02MCApplication*)
   {
      return GenerateInitInstanceLocal((::Ex02MCApplication*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Ex02MCApplication*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Ex02Particle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Ex02Particle(void *p = 0);
   static void *newArray_Ex02Particle(Long_t size, void *p);
   static void delete_Ex02Particle(void *p);
   static void deleteArray_Ex02Particle(void *p);
   static void destruct_Ex02Particle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Ex02Particle*)
   {
      ::Ex02Particle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Ex02Particle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Ex02Particle", ::Ex02Particle::Class_Version(), "./include/Ex02Particle.h", 36,
                  typeid(::Ex02Particle), DefineBehavior(ptr, ptr),
                  &::Ex02Particle::Dictionary, isa_proxy, 4,
                  sizeof(::Ex02Particle) );
      instance.SetNew(&new_Ex02Particle);
      instance.SetNewArray(&newArray_Ex02Particle);
      instance.SetDelete(&delete_Ex02Particle);
      instance.SetDeleteArray(&deleteArray_Ex02Particle);
      instance.SetDestructor(&destruct_Ex02Particle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Ex02Particle*)
   {
      return GenerateInitInstanceLocal((::Ex02Particle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Ex02Particle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR_Dictionary();
   static void *new_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR(void *p = 0);
   static void *newArray_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR(Long_t size, void *p);
   static void delete_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR(void *p);
   static void deleteArray_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR(void *p);
   static void destruct_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >*)
   {
      ::stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >),0);
      static ::ROOT::TGenericClassInfo 
         instance("stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >", "prec_stl/stack", 28,
                  typeid(::stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >), DefineBehavior(ptr, ptr),
                  0, &stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >) );
      instance.SetNew(&new_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR);
      instance.SetNewArray(&newArray_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR);
      instance.SetDelete(&delete_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR);
      instance.SetDestructor(&destruct_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >*)
   {
      return GenerateInitInstanceLocal((::stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
TClass *Ex02ChamberParameterisation::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Ex02ChamberParameterisation::Class_Name()
{
   return "Ex02ChamberParameterisation";
}

//______________________________________________________________________________
const char *Ex02ChamberParameterisation::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex02ChamberParameterisation*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Ex02ChamberParameterisation::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex02ChamberParameterisation*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Ex02ChamberParameterisation::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex02ChamberParameterisation*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Ex02ChamberParameterisation::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex02ChamberParameterisation*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Ex02DetectorConstruction::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Ex02DetectorConstruction::Class_Name()
{
   return "Ex02DetectorConstruction";
}

//______________________________________________________________________________
const char *Ex02DetectorConstruction::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex02DetectorConstruction*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Ex02DetectorConstruction::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex02DetectorConstruction*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Ex02DetectorConstruction::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex02DetectorConstruction*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Ex02DetectorConstruction::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex02DetectorConstruction*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Ex02DetectorConstructionOld::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Ex02DetectorConstructionOld::Class_Name()
{
   return "Ex02DetectorConstructionOld";
}

//______________________________________________________________________________
const char *Ex02DetectorConstructionOld::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex02DetectorConstructionOld*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Ex02DetectorConstructionOld::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex02DetectorConstructionOld*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Ex02DetectorConstructionOld::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex02DetectorConstructionOld*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Ex02DetectorConstructionOld::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex02DetectorConstructionOld*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Ex02MagField::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Ex02MagField::Class_Name()
{
   return "Ex02MagField";
}

//______________________________________________________________________________
const char *Ex02MagField::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex02MagField*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Ex02MagField::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex02MagField*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Ex02MagField::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex02MagField*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Ex02MagField::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex02MagField*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Ex02TrackerHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Ex02TrackerHit::Class_Name()
{
   return "Ex02TrackerHit";
}

//______________________________________________________________________________
const char *Ex02TrackerHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex02TrackerHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Ex02TrackerHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex02TrackerHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Ex02TrackerHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex02TrackerHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Ex02TrackerHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex02TrackerHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Ex02TrackerSD::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Ex02TrackerSD::Class_Name()
{
   return "Ex02TrackerSD";
}

//______________________________________________________________________________
const char *Ex02TrackerSD::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex02TrackerSD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Ex02TrackerSD::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex02TrackerSD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Ex02TrackerSD::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex02TrackerSD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Ex02TrackerSD::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex02TrackerSD*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Ex02RootManager::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Ex02RootManager::Class_Name()
{
   return "Ex02RootManager";
}

//______________________________________________________________________________
const char *Ex02RootManager::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex02RootManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Ex02RootManager::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex02RootManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Ex02RootManager::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex02RootManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Ex02RootManager::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex02RootManager*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Ex02MCStack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Ex02MCStack::Class_Name()
{
   return "Ex02MCStack";
}

//______________________________________________________________________________
const char *Ex02MCStack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex02MCStack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Ex02MCStack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex02MCStack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Ex02MCStack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex02MCStack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Ex02MCStack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex02MCStack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Ex02MCApplication::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Ex02MCApplication::Class_Name()
{
   return "Ex02MCApplication";
}

//______________________________________________________________________________
const char *Ex02MCApplication::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex02MCApplication*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Ex02MCApplication::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex02MCApplication*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Ex02MCApplication::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex02MCApplication*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Ex02MCApplication::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex02MCApplication*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Ex02Particle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Ex02Particle::Class_Name()
{
   return "Ex02Particle";
}

//______________________________________________________________________________
const char *Ex02Particle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex02Particle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Ex02Particle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex02Particle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Ex02Particle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex02Particle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Ex02Particle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex02Particle*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void Ex02MCApplication::Streamer(TBuffer &R__b)
{
   // Stream an object of class Ex02MCApplication.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Ex02MCApplication::Class(),this);
   } else {
      R__b.WriteClassBuffer(Ex02MCApplication::Class(),this);
   }
}

//______________________________________________________________________________
void Ex02MCApplication::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Ex02MCApplication.
      TClass *R__cl = ::Ex02MCApplication::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStack", &fStack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetConstruction", &fDetConstruction);
      R__insp.InspectMember(fDetConstruction, "fDetConstruction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackerSD", &fTrackerSD);
      R__insp.InspectMember(fTrackerSD, "fTrackerSD.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMagField", &fMagField);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRootManager", &fRootManager);
      R__insp.InspectMember(fRootManager, "fRootManager.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOldGeometry", &fOldGeometry);
      TVirtualMCApplication::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Ex02MCApplication(void *p) {
      return  p ? new(p) ::Ex02MCApplication : new ::Ex02MCApplication;
   }
   static void *newArray_Ex02MCApplication(Long_t nElements, void *p) {
      return p ? new(p) ::Ex02MCApplication[nElements] : new ::Ex02MCApplication[nElements];
   }
   // Wrapper around operator delete
   static void delete_Ex02MCApplication(void *p) {
      delete ((::Ex02MCApplication*)p);
   }
   static void deleteArray_Ex02MCApplication(void *p) {
      delete [] ((::Ex02MCApplication*)p);
   }
   static void destruct_Ex02MCApplication(void *p) {
      typedef ::Ex02MCApplication current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Ex02MCApplication

//______________________________________________________________________________
void Ex02MCStack::Streamer(TBuffer &R__b)
{
   // Stream an object of class Ex02MCStack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Ex02MCStack::Class(),this);
   } else {
      R__b.WriteClassBuffer(Ex02MCStack::Class(),this);
   }
}

//______________________________________________________________________________
void Ex02MCStack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Ex02MCStack.
      TClass *R__cl = ::Ex02MCStack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStack", (void*)&fStack);
      R__insp.InspectMember("stack<Ex02Particle*>", (void*)&fStack, "fStack.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParticles", &fParticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrentTrack", &fCurrentTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPrimary", &fNPrimary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fObjectNumber", &fObjectNumber);
      TVirtualMCStack::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Ex02MCStack(void *p) {
      return  p ? new(p) ::Ex02MCStack : new ::Ex02MCStack;
   }
   static void *newArray_Ex02MCStack(Long_t nElements, void *p) {
      return p ? new(p) ::Ex02MCStack[nElements] : new ::Ex02MCStack[nElements];
   }
   // Wrapper around operator delete
   static void delete_Ex02MCStack(void *p) {
      delete ((::Ex02MCStack*)p);
   }
   static void deleteArray_Ex02MCStack(void *p) {
      delete [] ((::Ex02MCStack*)p);
   }
   static void destruct_Ex02MCStack(void *p) {
      typedef ::Ex02MCStack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Ex02MCStack

//______________________________________________________________________________
void Ex02Particle::Streamer(TBuffer &R__b)
{
   // Stream an object of class Ex02Particle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Ex02Particle::Class(),this);
   } else {
      R__b.WriteClassBuffer(Ex02Particle::Class(),this);
   }
}

//______________________________________________________________________________
void Ex02Particle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Ex02Particle.
      TClass *R__cl = ::Ex02Particle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fID", &fID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParticle", &fParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMother", &fMother);
      R__insp.InspectMember(fMother, "fMother.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDaughters", &fDaughters);
      R__insp.InspectMember(fDaughters, "fDaughters.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Ex02Particle(void *p) {
      return  p ? new(p) ::Ex02Particle : new ::Ex02Particle;
   }
   static void *newArray_Ex02Particle(Long_t nElements, void *p) {
      return p ? new(p) ::Ex02Particle[nElements] : new ::Ex02Particle[nElements];
   }
   // Wrapper around operator delete
   static void delete_Ex02Particle(void *p) {
      delete ((::Ex02Particle*)p);
   }
   static void deleteArray_Ex02Particle(void *p) {
      delete [] ((::Ex02Particle*)p);
   }
   static void destruct_Ex02Particle(void *p) {
      typedef ::Ex02Particle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Ex02Particle

//______________________________________________________________________________
void Ex02ChamberParameterisation::Streamer(TBuffer &R__b)
{
   // Stream an object of class Ex02ChamberParameterisation.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Ex02ChamberParameterisation::Class(),this);
   } else {
      R__b.WriteClassBuffer(Ex02ChamberParameterisation::Class(),this);
   }
}

//______________________________________________________________________________
void Ex02ChamberParameterisation::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Ex02ChamberParameterisation.
      TClass *R__cl = ::Ex02ChamberParameterisation::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNoChambers", &fNoChambers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStartZ", &fStartZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHalfWidth", &fHalfWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSpacing", &fSpacing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHalfLengthFirst", &fHalfLengthFirst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHalfLengthIncr", &fHalfLengthIncr);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_Ex02ChamberParameterisation(void *p) {
      delete ((::Ex02ChamberParameterisation*)p);
   }
   static void deleteArray_Ex02ChamberParameterisation(void *p) {
      delete [] ((::Ex02ChamberParameterisation*)p);
   }
   static void destruct_Ex02ChamberParameterisation(void *p) {
      typedef ::Ex02ChamberParameterisation current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Ex02ChamberParameterisation

//______________________________________________________________________________
void Ex02DetectorConstruction::Streamer(TBuffer &R__b)
{
   // Stream an object of class Ex02DetectorConstruction.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Ex02DetectorConstruction::Class(),this);
   } else {
      R__b.WriteClassBuffer(Ex02DetectorConstruction::Class(),this);
   }
}

//______________________________________________________________________________
void Ex02DetectorConstruction::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Ex02DetectorConstruction.
      TClass *R__cl = ::Ex02DetectorConstruction::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWorldLength", &fWorldLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetLength", &fTargetLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackerLength", &fTrackerLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNofChambers", &fNofChambers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChamberWidth", &fChamberWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChamberSpacing", &fChamberSpacing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fImedAir", &fImedAir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fImedPb", &fImedPb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fImedXe", &fImedXe);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Ex02DetectorConstruction(void *p) {
      return  p ? new(p) ::Ex02DetectorConstruction : new ::Ex02DetectorConstruction;
   }
   static void *newArray_Ex02DetectorConstruction(Long_t nElements, void *p) {
      return p ? new(p) ::Ex02DetectorConstruction[nElements] : new ::Ex02DetectorConstruction[nElements];
   }
   // Wrapper around operator delete
   static void delete_Ex02DetectorConstruction(void *p) {
      delete ((::Ex02DetectorConstruction*)p);
   }
   static void deleteArray_Ex02DetectorConstruction(void *p) {
      delete [] ((::Ex02DetectorConstruction*)p);
   }
   static void destruct_Ex02DetectorConstruction(void *p) {
      typedef ::Ex02DetectorConstruction current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Ex02DetectorConstruction

//______________________________________________________________________________
void Ex02DetectorConstructionOld::Streamer(TBuffer &R__b)
{
   // Stream an object of class Ex02DetectorConstructionOld.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Ex02DetectorConstructionOld::Class(),this);
   } else {
      R__b.WriteClassBuffer(Ex02DetectorConstructionOld::Class(),this);
   }
}

//______________________________________________________________________________
void Ex02DetectorConstructionOld::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Ex02DetectorConstructionOld.
      TClass *R__cl = ::Ex02DetectorConstructionOld::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWorldLength", &fWorldLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetLength", &fTargetLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackerLength", &fTrackerLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNofChambers", &fNofChambers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChamberWidth", &fChamberWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChamberSpacing", &fChamberSpacing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fImedAir", &fImedAir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fImedPb", &fImedPb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fImedXe", &fImedXe);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Ex02DetectorConstructionOld(void *p) {
      return  p ? new(p) ::Ex02DetectorConstructionOld : new ::Ex02DetectorConstructionOld;
   }
   static void *newArray_Ex02DetectorConstructionOld(Long_t nElements, void *p) {
      return p ? new(p) ::Ex02DetectorConstructionOld[nElements] : new ::Ex02DetectorConstructionOld[nElements];
   }
   // Wrapper around operator delete
   static void delete_Ex02DetectorConstructionOld(void *p) {
      delete ((::Ex02DetectorConstructionOld*)p);
   }
   static void deleteArray_Ex02DetectorConstructionOld(void *p) {
      delete [] ((::Ex02DetectorConstructionOld*)p);
   }
   static void destruct_Ex02DetectorConstructionOld(void *p) {
      typedef ::Ex02DetectorConstructionOld current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Ex02DetectorConstructionOld

//______________________________________________________________________________
void Ex02MagField::Streamer(TBuffer &R__b)
{
   // Stream an object of class Ex02MagField.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Ex02MagField::Class(),this);
   } else {
      R__b.WriteClassBuffer(Ex02MagField::Class(),this);
   }
}

//______________________________________________________________________________
void Ex02MagField::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Ex02MagField.
      TClass *R__cl = ::Ex02MagField::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fB[3]", fB);
      TVirtualMagField::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Ex02MagField(void *p) {
      return  p ? new(p) ::Ex02MagField : new ::Ex02MagField;
   }
   static void *newArray_Ex02MagField(Long_t nElements, void *p) {
      return p ? new(p) ::Ex02MagField[nElements] : new ::Ex02MagField[nElements];
   }
   // Wrapper around operator delete
   static void delete_Ex02MagField(void *p) {
      delete ((::Ex02MagField*)p);
   }
   static void deleteArray_Ex02MagField(void *p) {
      delete [] ((::Ex02MagField*)p);
   }
   static void destruct_Ex02MagField(void *p) {
      typedef ::Ex02MagField current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Ex02MagField

//______________________________________________________________________________
void Ex02TrackerHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class Ex02TrackerHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Ex02TrackerHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(Ex02TrackerHit::Class(),this);
   }
}

//______________________________________________________________________________
void Ex02TrackerHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Ex02TrackerHit.
      TClass *R__cl = ::Ex02TrackerHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackID", &fTrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChamberNb", &fChamberNb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEdep", &fEdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPos", &fPos);
      R__insp.InspectMember(fPos, "fPos.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Ex02TrackerHit(void *p) {
      return  p ? new(p) ::Ex02TrackerHit : new ::Ex02TrackerHit;
   }
   static void *newArray_Ex02TrackerHit(Long_t nElements, void *p) {
      return p ? new(p) ::Ex02TrackerHit[nElements] : new ::Ex02TrackerHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_Ex02TrackerHit(void *p) {
      delete ((::Ex02TrackerHit*)p);
   }
   static void deleteArray_Ex02TrackerHit(void *p) {
      delete [] ((::Ex02TrackerHit*)p);
   }
   static void destruct_Ex02TrackerHit(void *p) {
      typedef ::Ex02TrackerHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Ex02TrackerHit

//______________________________________________________________________________
void Ex02TrackerSD::Streamer(TBuffer &R__b)
{
   // Stream an object of class Ex02TrackerSD.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Ex02TrackerSD::Class(),this);
   } else {
      R__b.WriteClassBuffer(Ex02TrackerSD::Class(),this);
   }
}

//______________________________________________________________________________
void Ex02TrackerSD::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Ex02TrackerSD.
      TClass *R__cl = ::Ex02TrackerSD::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrackerCollection", &fTrackerCollection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSensitiveVolumeID", &fSensitiveVolumeID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVerboseLevel", &fVerboseLevel);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Ex02TrackerSD(void *p) {
      return  p ? new(p) ::Ex02TrackerSD : new ::Ex02TrackerSD;
   }
   static void *newArray_Ex02TrackerSD(Long_t nElements, void *p) {
      return p ? new(p) ::Ex02TrackerSD[nElements] : new ::Ex02TrackerSD[nElements];
   }
   // Wrapper around operator delete
   static void delete_Ex02TrackerSD(void *p) {
      delete ((::Ex02TrackerSD*)p);
   }
   static void deleteArray_Ex02TrackerSD(void *p) {
      delete [] ((::Ex02TrackerSD*)p);
   }
   static void destruct_Ex02TrackerSD(void *p) {
      typedef ::Ex02TrackerSD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Ex02TrackerSD

//______________________________________________________________________________
void Ex02RootManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class Ex02RootManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Ex02RootManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(Ex02RootManager::Class(),this);
   }
}

//______________________________________________________________________________
void Ex02RootManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Ex02RootManager.
      TClass *R__cl = ::Ex02RootManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFile", &fFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPath", &fPath);
      R__insp.InspectMember(fPath, "fPath.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Ex02RootManager(void *p) {
      return  p ? new(p) ::Ex02RootManager : new ::Ex02RootManager;
   }
   static void *newArray_Ex02RootManager(Long_t nElements, void *p) {
      return p ? new(p) ::Ex02RootManager[nElements] : new ::Ex02RootManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_Ex02RootManager(void *p) {
      delete ((::Ex02RootManager*)p);
   }
   static void deleteArray_Ex02RootManager(void *p) {
      delete [] ((::Ex02RootManager*)p);
   }
   static void destruct_Ex02RootManager(void *p) {
      typedef ::Ex02RootManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Ex02RootManager

namespace ROOT {
   // Wrappers around operator new
   static void *new_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > > : new ::stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >;
   }
   static void *newArray_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >[nElements] : new ::stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR(void *p) {
      delete ((::stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >*)p);
   }
   static void deleteArray_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR(void *p) {
      delete [] ((::stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >*)p);
   }
   static void destruct_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR(void *p) {
      typedef ::stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >

namespace ROOT {
   void dequelEEx02ParticlemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dequelEEx02ParticlemUgR_Dictionary();
   static void *new_dequelEEx02ParticlemUgR(void *p = 0);
   static void *newArray_dequelEEx02ParticlemUgR(Long_t size, void *p);
   static void delete_dequelEEx02ParticlemUgR(void *p);
   static void deleteArray_dequelEEx02ParticlemUgR(void *p);
   static void destruct_dequelEEx02ParticlemUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const deque<Ex02Particle*>*)
   {
      deque<Ex02Particle*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(deque<Ex02Particle*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("deque<Ex02Particle*>", -2, "prec_stl/deque", 42,
                  typeid(deque<Ex02Particle*>), DefineBehavior(ptr, ptr),
                  0, &dequelEEx02ParticlemUgR_Dictionary, isa_proxy, 0,
                  sizeof(deque<Ex02Particle*>) );
      instance.SetNew(&new_dequelEEx02ParticlemUgR);
      instance.SetNewArray(&newArray_dequelEEx02ParticlemUgR);
      instance.SetDelete(&delete_dequelEEx02ParticlemUgR);
      instance.SetDeleteArray(&deleteArray_dequelEEx02ParticlemUgR);
      instance.SetDestructor(&destruct_dequelEEx02ParticlemUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< deque<Ex02Particle*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const deque<Ex02Particle*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dequelEEx02ParticlemUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const deque<Ex02Particle*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_dequelEEx02ParticlemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) deque<Ex02Particle*> : new deque<Ex02Particle*>;
   }
   static void *newArray_dequelEEx02ParticlemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) deque<Ex02Particle*>[nElements] : new deque<Ex02Particle*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_dequelEEx02ParticlemUgR(void *p) {
      delete ((deque<Ex02Particle*>*)p);
   }
   static void deleteArray_dequelEEx02ParticlemUgR(void *p) {
      delete [] ((deque<Ex02Particle*>*)p);
   }
   static void destruct_dequelEEx02ParticlemUgR(void *p) {
      typedef deque<Ex02Particle*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class deque<Ex02Particle*>

/********************************************************
* /vol0/panda/work/hades/target/E02/tmp/tgt_linuxx8664gcc/example02/example02Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableexample02Cint();

extern "C" void G__set_cpp_environmentexample02Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/Ex02ChamberParameterisation.h");
  G__add_compiledheader("include/Ex02DetectorConstruction.h");
  G__add_compiledheader("include/Ex02DetectorConstructionOld.h");
  G__add_compiledheader("include/Ex02MagField.h");
  G__add_compiledheader("include/Ex02MCApplication.h");
  G__add_compiledheader("include/Ex02MCStack.h");
  G__add_compiledheader("include/Ex02Particle.h");
  G__add_compiledheader("include/Ex02RootManager.h");
  G__add_compiledheader("include/Ex02TrackerHit.h");
  G__add_compiledheader("include/Ex02TrackerSD.h");
  G__cpp_reset_tagtableexample02Cint();
}
#include <new>
extern "C" int G__cpp_dllrevexample02Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Ex02ChamberParameterisation */
static int G__example02Cint_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02ChamberParameterisation* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Ex02ChamberParameterisation(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
   } else {
     p = new((void*) gvp) Ex02ChamberParameterisation(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02ChamberParameterisation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Ex02ChamberParameterisation*) G__getstructoffset())->ComputeTransformation((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Ex02ChamberParameterisation*) G__getstructoffset())->ComputeDimensions((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ex02ChamberParameterisation::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02ChamberParameterisation::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_168_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Ex02ChamberParameterisation::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_168_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Ex02ChamberParameterisation::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02ChamberParameterisation*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02ChamberParameterisation::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex02ChamberParameterisation::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02ChamberParameterisation::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex02ChamberParameterisation::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__example02Cint_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Ex02ChamberParameterisation* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Ex02ChamberParameterisation(*(Ex02ChamberParameterisation*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02ChamberParameterisation));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Ex02ChamberParameterisation G__TEx02ChamberParameterisation;
static int G__example02Cint_168_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Ex02ChamberParameterisation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Ex02ChamberParameterisation*) (soff+(sizeof(Ex02ChamberParameterisation)*i)))->~G__TEx02ChamberParameterisation();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Ex02ChamberParameterisation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Ex02ChamberParameterisation*) (soff))->~G__TEx02ChamberParameterisation();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__example02Cint_168_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02ChamberParameterisation* dest = (Ex02ChamberParameterisation*) G__getstructoffset();
   *dest = *(Ex02ChamberParameterisation*) libp->para[0].ref;
   const Ex02ChamberParameterisation& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Ex02DetectorConstruction */
static int G__example02Cint_184_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02DetectorConstruction* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex02DetectorConstruction[n];
     } else {
       p = new((void*) gvp) Ex02DetectorConstruction[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex02DetectorConstruction;
     } else {
       p = new((void*) gvp) Ex02DetectorConstruction;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02DetectorConstruction));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_184_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02DetectorConstruction*) G__getstructoffset())->ConstructMaterials();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_184_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02DetectorConstruction*) G__getstructoffset())->ConstructGeometry();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_184_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02DetectorConstruction*) G__getstructoffset())->SetTargetMaterial(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_184_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02DetectorConstruction*) G__getstructoffset())->SetChamberMaterial(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_184_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Ex02DetectorConstruction*) G__getstructoffset())->GetTrackerFullLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_184_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Ex02DetectorConstruction*) G__getstructoffset())->GetTargetFullLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_184_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Ex02DetectorConstruction*) G__getstructoffset())->GetWorldFullLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_184_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ex02DetectorConstruction::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_184_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02DetectorConstruction::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_184_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Ex02DetectorConstruction::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_184_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Ex02DetectorConstruction::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_184_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02DetectorConstruction*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_184_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02DetectorConstruction::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_184_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex02DetectorConstruction::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_184_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02DetectorConstruction::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_184_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex02DetectorConstruction::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__example02Cint_184_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Ex02DetectorConstruction* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Ex02DetectorConstruction(*(Ex02DetectorConstruction*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02DetectorConstruction));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Ex02DetectorConstruction G__TEx02DetectorConstruction;
static int G__example02Cint_184_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Ex02DetectorConstruction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Ex02DetectorConstruction*) (soff+(sizeof(Ex02DetectorConstruction)*i)))->~G__TEx02DetectorConstruction();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Ex02DetectorConstruction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Ex02DetectorConstruction*) (soff))->~G__TEx02DetectorConstruction();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__example02Cint_184_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02DetectorConstruction* dest = (Ex02DetectorConstruction*) G__getstructoffset();
   *dest = *(Ex02DetectorConstruction*) libp->para[0].ref;
   const Ex02DetectorConstruction& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Ex02DetectorConstructionOld */
static int G__example02Cint_185_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02DetectorConstructionOld* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex02DetectorConstructionOld[n];
     } else {
       p = new((void*) gvp) Ex02DetectorConstructionOld[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex02DetectorConstructionOld;
     } else {
       p = new((void*) gvp) Ex02DetectorConstructionOld;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02DetectorConstructionOld));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_185_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02DetectorConstructionOld*) G__getstructoffset())->ConstructMaterials();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_185_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02DetectorConstructionOld*) G__getstructoffset())->ConstructGeometry();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_185_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02DetectorConstructionOld*) G__getstructoffset())->SetTargetMaterial(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_185_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02DetectorConstructionOld*) G__getstructoffset())->SetChamberMaterial(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_185_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Ex02DetectorConstructionOld*) G__getstructoffset())->GetTrackerFullLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_185_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Ex02DetectorConstructionOld*) G__getstructoffset())->GetTargetFullLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_185_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Ex02DetectorConstructionOld*) G__getstructoffset())->GetWorldFullLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_185_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ex02DetectorConstructionOld::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_185_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02DetectorConstructionOld::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_185_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Ex02DetectorConstructionOld::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_185_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Ex02DetectorConstructionOld::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_185_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02DetectorConstructionOld*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_185_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02DetectorConstructionOld::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_185_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex02DetectorConstructionOld::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_185_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02DetectorConstructionOld::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_185_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex02DetectorConstructionOld::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__example02Cint_185_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Ex02DetectorConstructionOld* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Ex02DetectorConstructionOld(*(Ex02DetectorConstructionOld*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02DetectorConstructionOld));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Ex02DetectorConstructionOld G__TEx02DetectorConstructionOld;
static int G__example02Cint_185_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Ex02DetectorConstructionOld*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Ex02DetectorConstructionOld*) (soff+(sizeof(Ex02DetectorConstructionOld)*i)))->~G__TEx02DetectorConstructionOld();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Ex02DetectorConstructionOld*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Ex02DetectorConstructionOld*) (soff))->~G__TEx02DetectorConstructionOld();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__example02Cint_185_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02DetectorConstructionOld* dest = (Ex02DetectorConstructionOld*) G__getstructoffset();
   *dest = *(Ex02DetectorConstructionOld*) libp->para[0].ref;
   const Ex02DetectorConstructionOld& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Ex02MagField */
static int G__example02Cint_188_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02MagField* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Ex02MagField(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) Ex02MagField(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02MagField));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_188_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02MagField* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex02MagField[n];
     } else {
       p = new((void*) gvp) Ex02MagField[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex02MagField;
     } else {
       p = new((void*) gvp) Ex02MagField;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02MagField));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_188_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ex02MagField::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_188_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02MagField::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_188_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Ex02MagField::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_188_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Ex02MagField::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_188_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02MagField*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_188_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02MagField::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_188_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex02MagField::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_188_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02MagField::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_188_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex02MagField::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Ex02MagField G__TEx02MagField;
static int G__example02Cint_188_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Ex02MagField*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Ex02MagField*) (soff+(sizeof(Ex02MagField)*i)))->~G__TEx02MagField();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Ex02MagField*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Ex02MagField*) (soff))->~G__TEx02MagField();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Ex02TrackerHit */
static int G__example02Cint_198_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02TrackerHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex02TrackerHit[n];
     } else {
       p = new((void*) gvp) Ex02TrackerHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex02TrackerHit;
     } else {
       p = new((void*) gvp) Ex02TrackerHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_198_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02TrackerHit*) G__getstructoffset())->SetTrackID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_198_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02TrackerHit*) G__getstructoffset())->SetChamberNb((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_198_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02TrackerHit*) G__getstructoffset())->SetEdep((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_198_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02TrackerHit*) G__getstructoffset())->SetPos(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_198_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Ex02TrackerHit*) G__getstructoffset())->GetTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_198_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Ex02TrackerHit*) G__getstructoffset())->GetChamberNb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_198_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Ex02TrackerHit*) G__getstructoffset())->GetEdep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_198_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((Ex02TrackerHit*) G__getstructoffset())->GetPos();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_198_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ex02TrackerHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_198_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02TrackerHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_198_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Ex02TrackerHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_198_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Ex02TrackerHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_198_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02TrackerHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_198_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02TrackerHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_198_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex02TrackerHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_198_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02TrackerHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_198_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex02TrackerHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__example02Cint_198_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Ex02TrackerHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Ex02TrackerHit(*(Ex02TrackerHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Ex02TrackerHit G__TEx02TrackerHit;
static int G__example02Cint_198_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Ex02TrackerHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Ex02TrackerHit*) (soff+(sizeof(Ex02TrackerHit)*i)))->~G__TEx02TrackerHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Ex02TrackerHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Ex02TrackerHit*) (soff))->~G__TEx02TrackerHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__example02Cint_198_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02TrackerHit* dest = (Ex02TrackerHit*) G__getstructoffset();
   *dest = *(Ex02TrackerHit*) libp->para[0].ref;
   const Ex02TrackerHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Ex02TrackerSD */
static int G__example02Cint_199_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02TrackerSD* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Ex02TrackerSD((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Ex02TrackerSD((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerSD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_199_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02TrackerSD* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex02TrackerSD[n];
     } else {
       p = new((void*) gvp) Ex02TrackerSD[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex02TrackerSD;
     } else {
       p = new((void*) gvp) Ex02TrackerSD;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerSD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_199_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02TrackerSD*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_199_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Ex02TrackerSD*) G__getstructoffset())->ProcessHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_199_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02TrackerSD*) G__getstructoffset())->EndOfEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_199_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02TrackerSD*) G__getstructoffset())->Register();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_199_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02TrackerSD*) G__getstructoffset())->SetVerboseLevel((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_199_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ex02TrackerSD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_199_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02TrackerSD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_199_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Ex02TrackerSD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_199_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Ex02TrackerSD::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_199_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02TrackerSD*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_199_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02TrackerSD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_199_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex02TrackerSD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_199_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02TrackerSD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_199_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex02TrackerSD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__example02Cint_199_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Ex02TrackerSD* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Ex02TrackerSD(*(Ex02TrackerSD*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerSD));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Ex02TrackerSD G__TEx02TrackerSD;
static int G__example02Cint_199_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Ex02TrackerSD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Ex02TrackerSD*) (soff+(sizeof(Ex02TrackerSD)*i)))->~G__TEx02TrackerSD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Ex02TrackerSD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Ex02TrackerSD*) (soff))->~G__TEx02TrackerSD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__example02Cint_199_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02TrackerSD* dest = (Ex02TrackerSD*) G__getstructoffset();
   *dest = *(Ex02TrackerSD*) libp->para[0].ref;
   const Ex02TrackerSD& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Ex02RootManager */
static int G__example02Cint_539_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02RootManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Ex02RootManager((const char*) G__int(libp->para[0]), (FileMode) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) Ex02RootManager((const char*) G__int(libp->para[0]), (FileMode) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02RootManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_539_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02RootManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex02RootManager[n];
     } else {
       p = new((void*) gvp) Ex02RootManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex02RootManager;
     } else {
       p = new((void*) gvp) Ex02RootManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02RootManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_539_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ex02RootManager::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_539_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02RootManager*) G__getstructoffset())->Register((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_539_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02RootManager*) G__getstructoffset())->Fill();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_539_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02RootManager*) G__getstructoffset())->WriteAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_539_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02RootManager*) G__getstructoffset())->ReadEvent((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_539_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ex02RootManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_539_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02RootManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_539_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Ex02RootManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_539_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Ex02RootManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_539_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02RootManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_539_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02RootManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_539_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex02RootManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_539_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02RootManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_539_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex02RootManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__example02Cint_539_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Ex02RootManager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Ex02RootManager(*(Ex02RootManager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02RootManager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Ex02RootManager G__TEx02RootManager;
static int G__example02Cint_539_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Ex02RootManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Ex02RootManager*) (soff+(sizeof(Ex02RootManager)*i)))->~G__TEx02RootManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Ex02RootManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Ex02RootManager*) (soff))->~G__TEx02RootManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__example02Cint_539_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02RootManager* dest = (Ex02RootManager*) G__getstructoffset();
   *dest = *(Ex02RootManager*) libp->para[0].ref;
   const Ex02RootManager& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Ex02MCStack */
static int G__example02Cint_540_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02MCStack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Ex02MCStack((Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Ex02MCStack((Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02MCStack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_540_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02MCStack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex02MCStack[n];
     } else {
       p = new((void*) gvp) Ex02MCStack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex02MCStack;
     } else {
       p = new((void*) gvp) Ex02MCStack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02MCStack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_540_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02MCStack*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_540_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02MCStack*) G__getstructoffset())->SetObjectNumber();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_540_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Ex02MCStack*) G__getstructoffset())->GetParticle((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_540_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ex02MCStack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_540_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02MCStack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_540_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Ex02MCStack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_540_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Ex02MCStack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_540_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02MCStack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_540_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02MCStack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_540_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex02MCStack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_540_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02MCStack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_540_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex02MCStack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__example02Cint_540_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Ex02MCStack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Ex02MCStack(*(Ex02MCStack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02MCStack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Ex02MCStack G__TEx02MCStack;
static int G__example02Cint_540_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Ex02MCStack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Ex02MCStack*) (soff+(sizeof(Ex02MCStack)*i)))->~G__TEx02MCStack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Ex02MCStack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Ex02MCStack*) (soff))->~G__TEx02MCStack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__example02Cint_540_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02MCStack* dest = (Ex02MCStack*) G__getstructoffset();
   *dest = *(Ex02MCStack*) libp->para[0].ref;
   const Ex02MCStack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Ex02MCApplication */
static int G__example02Cint_541_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02MCApplication* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex02MCApplication(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (FileMode) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) Ex02MCApplication(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (FileMode) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex02MCApplication((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) Ex02MCApplication((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02MCApplication));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_541_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02MCApplication* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex02MCApplication[n];
     } else {
       p = new((void*) gvp) Ex02MCApplication[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex02MCApplication;
     } else {
       p = new((void*) gvp) Ex02MCApplication;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02MCApplication));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_541_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ex02MCApplication::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_541_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02MCApplication*) G__getstructoffset())->InitMC((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_541_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02MCApplication*) G__getstructoffset())->RunMC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_541_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02MCApplication*) G__getstructoffset())->FinishRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_541_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02MCApplication*) G__getstructoffset())->ReadEvent((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_541_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Ex02MCApplication*) G__getstructoffset())->SetOldGeometry((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Ex02MCApplication*) G__getstructoffset())->SetOldGeometry();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_541_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ex02MCApplication::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_541_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02MCApplication::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_541_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Ex02MCApplication::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_541_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Ex02MCApplication::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_541_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02MCApplication*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_541_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02MCApplication::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_541_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex02MCApplication::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_541_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02MCApplication::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_541_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex02MCApplication::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__example02Cint_541_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Ex02MCApplication* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Ex02MCApplication(*(Ex02MCApplication*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02MCApplication));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Ex02MCApplication G__TEx02MCApplication;
static int G__example02Cint_541_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Ex02MCApplication*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Ex02MCApplication*) (soff+(sizeof(Ex02MCApplication)*i)))->~G__TEx02MCApplication();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Ex02MCApplication*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Ex02MCApplication*) (soff))->~G__TEx02MCApplication();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__example02Cint_541_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02MCApplication* dest = (Ex02MCApplication*) G__getstructoffset();
   *dest = *(Ex02MCApplication*) libp->para[0].ref;
   const Ex02MCApplication& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Ex02Particle */
static int G__example02Cint_549_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Ex02Particle((Int_t) G__int(libp->para[0]), (TParticle*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) Ex02Particle((Int_t) G__int(libp->para[0]), (TParticle*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02Particle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_549_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Ex02Particle(
(Int_t) G__int(libp->para[0]), (TParticle*) G__int(libp->para[1])
, (Ex02Particle*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) Ex02Particle(
(Int_t) G__int(libp->para[0]), (TParticle*) G__int(libp->para[1])
, (Ex02Particle*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02Particle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_549_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex02Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex02Particle[n];
     } else {
       p = new((void*) gvp) Ex02Particle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex02Particle;
     } else {
       p = new((void*) gvp) Ex02Particle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_Ex02Particle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_549_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02Particle*) G__getstructoffset())->SetMother((Ex02Particle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_549_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02Particle*) G__getstructoffset())->AddDaughter((Ex02Particle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_549_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Ex02Particle*) G__getstructoffset())->PrintDaughters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_549_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Ex02Particle*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_549_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Ex02Particle*) G__getstructoffset())->GetParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_549_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Ex02Particle*) G__getstructoffset())->GetMother());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_549_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Ex02Particle*) G__getstructoffset())->GetNofDaughters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_549_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Ex02Particle*) G__getstructoffset())->GetDaughter((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_549_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ex02Particle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_549_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02Particle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_549_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Ex02Particle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_549_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Ex02Particle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_549_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex02Particle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_549_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02Particle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_549_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex02Particle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_549_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex02Particle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_549_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex02Particle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Ex02Particle G__TEx02Particle;
static int G__example02Cint_549_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Ex02Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Ex02Particle*) (soff+(sizeof(Ex02Particle)*i)))->~G__TEx02Particle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Ex02Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Ex02Particle*) (soff))->~G__TEx02Particle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > > */
static int G__example02Cint_585_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >[n];
     } else {
       p = new((void*) gvp) stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >;
     } else {
       p = new((void*) gvp) stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_585_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_585_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_585_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >::value_type& obj = ((stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >*) G__getstructoffset())->top();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_585_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >*) G__getstructoffset())->push(libp->para[0].ref ? *(Ex02Particle**) libp->para[0].ref : *(Ex02Particle**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example02Cint_585_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >*) G__getstructoffset())->pop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__example02Cint_585_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >(*(stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example02CintLN_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > > G__TstacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR;
static int G__example02Cint_585_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >*) (soff+(sizeof(stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >)*i)))->~G__TstacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >*) (soff))->~G__TstacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__example02Cint_585_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >* dest = (stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >*) G__getstructoffset();
   *dest = *(stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >*) libp->para[0].ref;
   const stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Ex02ChamberParameterisation */

/* Ex02DetectorConstruction */

/* Ex02DetectorConstructionOld */

/* Ex02MagField */

/* Ex02TrackerHit */

/* Ex02TrackerSD */

/* Ex02RootManager */

/* Ex02MCStack */

/* Ex02MCApplication */

/* Ex02Particle */

/* stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncexample02Cint {
 public:
  G__Sizep2memfuncexample02Cint(): p(&G__Sizep2memfuncexample02Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncexample02Cint::*p)();
};

size_t G__get_sizep2memfuncexample02Cint()
{
  G__Sizep2memfuncexample02Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceexample02Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__example02CintLN_Ex02ChamberParameterisation))) {
     Ex02ChamberParameterisation *G__Lderived;
     G__Lderived=(Ex02ChamberParameterisation*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02ChamberParameterisation),G__get_linked_tagnum(&G__example02CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__example02CintLN_Ex02DetectorConstruction))) {
     Ex02DetectorConstruction *G__Lderived;
     G__Lderived=(Ex02DetectorConstruction*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02DetectorConstruction),G__get_linked_tagnum(&G__example02CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__example02CintLN_Ex02DetectorConstructionOld))) {
     Ex02DetectorConstructionOld *G__Lderived;
     G__Lderived=(Ex02DetectorConstructionOld*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02DetectorConstructionOld),G__get_linked_tagnum(&G__example02CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__example02CintLN_Ex02MagField))) {
     Ex02MagField *G__Lderived;
     G__Lderived=(Ex02MagField*)0x1000;
     {
       TVirtualMagField *G__Lpbase=(TVirtualMagField*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02MagField),G__get_linked_tagnum(&G__example02CintLN_TVirtualMagField),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02MagField),G__get_linked_tagnum(&G__example02CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02MagField),G__get_linked_tagnum(&G__example02CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerHit))) {
     Ex02TrackerHit *G__Lderived;
     G__Lderived=(Ex02TrackerHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerHit),G__get_linked_tagnum(&G__example02CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerSD))) {
     Ex02TrackerSD *G__Lderived;
     G__Lderived=(Ex02TrackerSD*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerSD),G__get_linked_tagnum(&G__example02CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerSD),G__get_linked_tagnum(&G__example02CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__example02CintLN_Ex02RootManager))) {
     Ex02RootManager *G__Lderived;
     G__Lderived=(Ex02RootManager*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02RootManager),G__get_linked_tagnum(&G__example02CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__example02CintLN_Ex02MCStack))) {
     Ex02MCStack *G__Lderived;
     G__Lderived=(Ex02MCStack*)0x1000;
     {
       TVirtualMCStack *G__Lpbase=(TVirtualMCStack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02MCStack),G__get_linked_tagnum(&G__example02CintLN_TVirtualMCStack),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02MCStack),G__get_linked_tagnum(&G__example02CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__example02CintLN_Ex02MCApplication))) {
     Ex02MCApplication *G__Lderived;
     G__Lderived=(Ex02MCApplication*)0x1000;
     {
       TVirtualMCApplication *G__Lpbase=(TVirtualMCApplication*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02MCApplication),G__get_linked_tagnum(&G__example02CintLN_TVirtualMCApplication),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02MCApplication),G__get_linked_tagnum(&G__example02CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02MCApplication),G__get_linked_tagnum(&G__example02CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__example02CintLN_Ex02Particle))) {
     Ex02Particle *G__Lderived;
     G__Lderived=(Ex02Particle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02Particle),G__get_linked_tagnum(&G__example02CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__example02CintLN_TVirtualMCStack))) {
     TVirtualMCStack *G__Lderived;
     G__Lderived=(TVirtualMCStack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example02CintLN_TVirtualMCStack),G__get_linked_tagnum(&G__example02CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableexample02Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__example02CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__example02CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__example02CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__example02CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__example02CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__example02CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__example02CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__example02CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__example02CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__example02CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__example02CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__example02CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__example02CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__example02CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__example02CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__example02CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__example02CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__example02CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__example02CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<Ex02Particle*>",117,G__get_linked_tagnum(&G__example02CintLN_dequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<Ex02Particle*>",117,G__get_linked_tagnum(&G__example02CintLN_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__example02CintLN_Ex02Particle),0,G__get_linked_tagnum(&G__example02CintLN_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__example02CintLN_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("container_type",117,G__get_linked_tagnum(&G__example02CintLN_dequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgR),0,G__get_linked_tagnum(&G__example02CintLN_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__example02CintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__example02CintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__example02CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__example02CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__example02CintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__example02CintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__example02CintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__example02CintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__example02CintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__example02CintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__example02CintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__example02CintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__example02CintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__example02CintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__example02CintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__example02CintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__example02CintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__example02CintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__example02CintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__example02CintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__example02CintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<Ex02Particle*,deque<Ex02Particle*> >",117,G__get_linked_tagnum(&G__example02CintLN_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Ex02ChamberParameterisation */
static void G__setup_memvarEx02ChamberParameterisation(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02ChamberParameterisation));
   { Ex02ChamberParameterisation *p; p=(Ex02ChamberParameterisation*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNoChambers=",0,"/< Number of chambers");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fStartZ=",0,"/< The Z of the center of first chamber ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fHalfWidth=",0,"/< The half-width of each tracker chamber");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSpacing=",0,"/< The distance between the chambers' centers");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fHalfLengthFirst=",0,"/< The first half-length ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fHalfLengthIncr=",0,"/< The Increment for the half-length ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example02CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Ex02DetectorConstruction */
static void G__setup_memvarEx02DetectorConstruction(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02DetectorConstruction));
   { Ex02DetectorConstruction *p; p=(Ex02DetectorConstruction*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fWorldLength=",0,"/< Full length of the world volume");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTargetLength=",0,"/< Full length of Target");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrackerLength=",0,"/< Full length of Tracker");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNofChambers=",0,"/< Nb of chambers in the tracker region");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fChamberWidth=",0,"/< Width of the chambers");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fChamberSpacing=",0,"/< Distance between chambers");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fImedAir=",0,"/< The Air medium Id");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fImedPb=",0,"/< The Lead medium Id");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fImedXe=",0,"/< The Xenon gas medium Id");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example02CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Ex02DetectorConstructionOld */
static void G__setup_memvarEx02DetectorConstructionOld(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02DetectorConstructionOld));
   { Ex02DetectorConstructionOld *p; p=(Ex02DetectorConstructionOld*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fWorldLength=",0,"/< Full length of the world volume");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTargetLength=",0,"/< Full length of Target");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrackerLength=",0,"/< Full length of Tracker");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNofChambers=",0,"/< Nb of chambers in the tracker region");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fChamberWidth=",0,"/< Width of the chambers");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fChamberSpacing=",0,"/< Distance between chambers");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fImedAir=",0,"/< The Air medium Id");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fImedPb=",0,"/< The Lead medium Id");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fImedXe=",0,"/< The Xenon gas medium Id");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example02CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Ex02MagField */
static void G__setup_memvarEx02MagField(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02MagField));
   { Ex02MagField *p; p=(Ex02MagField*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fB[3]=",0,"/< Magnetic field vector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example02CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Ex02TrackerHit */
static void G__setup_memvarEx02TrackerHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerHit));
   { Ex02TrackerHit *p; p=(Ex02TrackerHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTrackID=",0,"/< Track Id");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fChamberNb=",0,"/< Chamber number");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEdep=",0,"/< Energy deposit");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__example02CintLN_TVector3),-1,-1,4,"fPos=",0,"/< Track position");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example02CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Ex02TrackerSD */
static void G__setup_memvarEx02TrackerSD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerSD));
   { Ex02TrackerSD *p; p=(Ex02TrackerSD*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example02CintLN_TClonesArray),-1,-1,4,"fTrackerCollection=",0,"/< Hits collection    ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSensitiveVolumeID=",0,"/< Sensitive volume Id");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fVerboseLevel=",0,"/< Verbosity level");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example02CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Ex02RootManager */
static void G__setup_memvarEx02RootManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02RootManager));
   { Ex02RootManager *p; p=(Ex02RootManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example02CintLN_Ex02RootManager),-1,-2,4,"fgInstance=",0,"/< Singleton instance");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example02CintLN_TFile),-1,-1,4,"fFile=",0,"/< Root output file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example02CintLN_TTree),-1,-1,4,"fTree=",0,"/< Root output tree ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__example02CintLN_TString),-1,-1,4,"fPath=",0,"/< The path to the root file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example02CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Ex02MCStack */
static void G__setup_memvarEx02MCStack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02MCStack));
   { Ex02MCStack *p; p=(Ex02MCStack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__example02CintLN_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR),G__defined_typename("stack<Ex02Particle*>"),-1,4,"fStack=",0,"!< The stack of particles (transient)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example02CintLN_TObjArray),-1,-1,4,"fParticles=",0,"/< The array of particle (persistent)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCurrentTrack=",0,"/< The current track number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNPrimary=",0,"/< The number of primaries");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fObjectNumber=",0,"/< The Root object number counter");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example02CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Ex02MCApplication */
static void G__setup_memvarEx02MCApplication(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02MCApplication));
   { Ex02MCApplication *p; p=(Ex02MCApplication*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example02CintLN_Ex02MCStack),-1,-1,4,"fStack=",0,"/< VMC stack");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__example02CintLN_Ex02DetectorConstruction),-1,-1,4,"fDetConstruction=",0,"/< Dector construction");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerSD),-1,-1,4,"fTrackerSD=",0,"/< Tracker SD");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example02CintLN_TVirtualMagField),-1,-1,4,"fMagField=",0,"/< Magnetic field");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__example02CintLN_Ex02RootManager),-1,-1,4,"fRootManager=",0,"/< Root manager ");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fOldGeometry=",0,"/< Option for geometry definition");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example02CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Ex02Particle */
static void G__setup_memvarEx02Particle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02Particle));
   { Ex02Particle *p; p=(Ex02Particle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fID=",0,"/< The particle Id");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example02CintLN_TParticle),-1,-1,4,"fParticle=",0,"/< The particle definition");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__example02CintLN_TRef),-1,-1,4,"fMother=",0,"/< The particle mother ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__example02CintLN_TRefArray),-1,-1,4,"fDaughters=",0,"/< The particle daughters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example02CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > > */
static void G__setup_memvarstacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__example02CintLN_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR));
   { stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > > *p; p=(stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__example02CintLN_dequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgR),-1,-1,2,"c=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarexample02Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncEx02ChamberParameterisation(void) {
   /* Ex02ChamberParameterisation */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02ChamberParameterisation));
   G__memfunc_setup("Ex02ChamberParameterisation",2665,G__example02Cint_168_0_1, 105, G__get_linked_tagnum(&G__example02CintLN_Ex02ChamberParameterisation), -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - noChambers d - 'Double_t' 0 - startZ "
"d - 'Double_t' 0 - spacingZ d - 'Double_t' 0 - widthChamber "
"d - 'Double_t' 0 - lengthInitial d - 'Double_t' 0 - lengthFinal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComputeTransformation",2228,G__example02Cint_168_0_2, 121, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - copyNo D - 'Double_t' 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComputeDimensions",1782,G__example02Cint_168_0_3, 121, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - copyNo D - 'Double_t' 0 - dimension", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__example02Cint_168_0_4, 85, G__get_linked_tagnum(&G__example02CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Ex02ChamberParameterisation::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__example02Cint_168_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02ChamberParameterisation::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__example02Cint_168_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Ex02ChamberParameterisation::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__example02Cint_168_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Ex02ChamberParameterisation::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__example02CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__example02Cint_168_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__example02Cint_168_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02ChamberParameterisation::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__example02Cint_168_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex02ChamberParameterisation::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__example02Cint_168_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02ChamberParameterisation::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__example02Cint_168_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex02ChamberParameterisation::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Ex02ChamberParameterisation", 2665, G__example02Cint_168_0_16, (int) ('i'), 
G__get_linked_tagnum(&G__example02CintLN_Ex02ChamberParameterisation), -1, 0, 1, 1, 1, 0, "u 'Ex02ChamberParameterisation' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Ex02ChamberParameterisation", 2791, G__example02Cint_168_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__example02Cint_168_0_18, (int) ('u'), G__get_linked_tagnum(&G__example02CintLN_Ex02ChamberParameterisation), -1, 1, 1, 1, 1, 0, "u 'Ex02ChamberParameterisation' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEx02DetectorConstruction(void) {
   /* Ex02DetectorConstruction */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02DetectorConstruction));
   G__memfunc_setup("Ex02DetectorConstruction",2404,G__example02Cint_184_0_1, 105, G__get_linked_tagnum(&G__example02CintLN_Ex02DetectorConstruction), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructMaterials",1895,G__example02Cint_184_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructGeometry",1809,G__example02Cint_184_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTargetMaterial",1730,G__example02Cint_184_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChamberMaterial",1805,G__example02Cint_184_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackerFullLength",2017,G__example02Cint_184_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetFullLength",1916,G__example02Cint_184_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWorldFullLength",1821,G__example02Cint_184_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__example02Cint_184_0_9, 85, G__get_linked_tagnum(&G__example02CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Ex02DetectorConstruction::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__example02Cint_184_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02DetectorConstruction::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__example02Cint_184_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Ex02DetectorConstruction::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__example02Cint_184_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Ex02DetectorConstruction::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__example02CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__example02Cint_184_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__example02Cint_184_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02DetectorConstruction::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__example02Cint_184_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex02DetectorConstruction::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__example02Cint_184_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02DetectorConstruction::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__example02Cint_184_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex02DetectorConstruction::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Ex02DetectorConstruction", 2404, G__example02Cint_184_0_21, (int) ('i'), 
G__get_linked_tagnum(&G__example02CintLN_Ex02DetectorConstruction), -1, 0, 1, 1, 1, 0, "u 'Ex02DetectorConstruction' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Ex02DetectorConstruction", 2530, G__example02Cint_184_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__example02Cint_184_0_23, (int) ('u'), G__get_linked_tagnum(&G__example02CintLN_Ex02DetectorConstruction), -1, 1, 1, 1, 1, 0, "u 'Ex02DetectorConstruction' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEx02DetectorConstructionOld(void) {
   /* Ex02DetectorConstructionOld */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02DetectorConstructionOld));
   G__memfunc_setup("Ex02DetectorConstructionOld",2691,G__example02Cint_185_0_1, 105, G__get_linked_tagnum(&G__example02CintLN_Ex02DetectorConstructionOld), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructMaterials",1895,G__example02Cint_185_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructGeometry",1809,G__example02Cint_185_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTargetMaterial",1730,G__example02Cint_185_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChamberMaterial",1805,G__example02Cint_185_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackerFullLength",2017,G__example02Cint_185_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetFullLength",1916,G__example02Cint_185_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWorldFullLength",1821,G__example02Cint_185_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__example02Cint_185_0_9, 85, G__get_linked_tagnum(&G__example02CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Ex02DetectorConstructionOld::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__example02Cint_185_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02DetectorConstructionOld::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__example02Cint_185_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Ex02DetectorConstructionOld::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__example02Cint_185_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Ex02DetectorConstructionOld::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__example02CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__example02Cint_185_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__example02Cint_185_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02DetectorConstructionOld::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__example02Cint_185_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex02DetectorConstructionOld::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__example02Cint_185_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02DetectorConstructionOld::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__example02Cint_185_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex02DetectorConstructionOld::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Ex02DetectorConstructionOld", 2691, G__example02Cint_185_0_21, (int) ('i'), 
G__get_linked_tagnum(&G__example02CintLN_Ex02DetectorConstructionOld), -1, 0, 1, 1, 1, 0, "u 'Ex02DetectorConstructionOld' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Ex02DetectorConstructionOld", 2817, G__example02Cint_185_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__example02Cint_185_0_23, (int) ('u'), G__get_linked_tagnum(&G__example02CintLN_Ex02DetectorConstructionOld), -1, 1, 1, 1, 1, 0, "u 'Ex02DetectorConstructionOld' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEx02MagField(void) {
   /* Ex02MagField */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02MagField));
   G__memfunc_setup("Ex02MagField",1048,G__example02Cint_188_0_1, 105, G__get_linked_tagnum(&G__example02CintLN_Ex02MagField), -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - Bx d - 'Double_t' 0 - By "
"d - 'Double_t' 0 - Bz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ex02MagField",1048,G__example02Cint_188_0_2, 105, G__get_linked_tagnum(&G__example02CintLN_Ex02MagField), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Field",484,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 10 - x D - 'Double_t' 0 - B", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Ex02MagField",1048,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__example02CintLN_Ex02MagField), -1, 0, 1, 1, 4, 0, "u 'Ex02MagField' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__example02CintLN_Ex02MagField), -1, 1, 1, 1, 4, 0, "u 'Ex02MagField' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__example02Cint_188_0_6, 85, G__get_linked_tagnum(&G__example02CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Ex02MagField::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__example02Cint_188_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02MagField::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__example02Cint_188_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Ex02MagField::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__example02Cint_188_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Ex02MagField::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__example02CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__example02Cint_188_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__example02Cint_188_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02MagField::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__example02Cint_188_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex02MagField::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__example02Cint_188_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02MagField::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__example02Cint_188_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex02MagField::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Ex02MagField", 1174, G__example02Cint_188_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEx02TrackerHit(void) {
   /* Ex02TrackerHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerHit));
   G__memfunc_setup("Ex02TrackerHit",1296,G__example02Cint_198_0_1, 105, G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrackID",942,G__example02Cint_198_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChamberNb",1166,G__example02Cint_198_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - chamb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEdep",682,G__example02Cint_198_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - de", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPos",606,G__example02Cint_198_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - xyz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackID",930,G__example02Cint_198_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChamberNb",1154,G__example02Cint_198_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdep",670,G__example02Cint_198_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPos",594,G__example02Cint_198_0_10, 117, G__get_linked_tagnum(&G__example02CintLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__example02Cint_198_0_11, 85, G__get_linked_tagnum(&G__example02CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Ex02TrackerHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__example02Cint_198_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02TrackerHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__example02Cint_198_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Ex02TrackerHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__example02Cint_198_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Ex02TrackerHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__example02CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__example02Cint_198_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__example02Cint_198_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02TrackerHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__example02Cint_198_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex02TrackerHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__example02Cint_198_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02TrackerHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__example02Cint_198_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex02TrackerHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Ex02TrackerHit", 1296, G__example02Cint_198_0_23, (int) ('i'), G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerHit), -1, 0, 1, 1, 1, 0, "u 'Ex02TrackerHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Ex02TrackerHit", 1422, G__example02Cint_198_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__example02Cint_198_0_25, (int) ('u'), G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerHit), -1, 1, 1, 1, 1, 0, "u 'Ex02TrackerHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEx02TrackerSD(void) {
   /* Ex02TrackerSD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerSD));
   G__memfunc_setup("Ex02TrackerSD",1154,G__example02Cint_199_0_1, 105, G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerSD), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ex02TrackerSD",1154,G__example02Cint_199_0_2, 105, G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerSD), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__example02Cint_199_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessHits",1143,G__example02Cint_199_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EndOfEvent",974,G__example02Cint_199_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Register",837,G__example02Cint_199_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '0' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVerboseLevel",1530,G__example02Cint_199_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHit",558,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerHit), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__example02Cint_199_0_10, 85, G__get_linked_tagnum(&G__example02CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Ex02TrackerSD::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__example02Cint_199_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02TrackerSD::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__example02Cint_199_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Ex02TrackerSD::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__example02Cint_199_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Ex02TrackerSD::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__example02CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__example02Cint_199_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__example02Cint_199_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02TrackerSD::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__example02Cint_199_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex02TrackerSD::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__example02Cint_199_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02TrackerSD::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__example02Cint_199_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex02TrackerSD::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Ex02TrackerSD", 1154, G__example02Cint_199_0_22, (int) ('i'), G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerSD), -1, 0, 1, 1, 1, 0, "u 'Ex02TrackerSD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Ex02TrackerSD", 1280, G__example02Cint_199_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__example02Cint_199_0_24, (int) ('u'), G__get_linked_tagnum(&G__example02CintLN_Ex02TrackerSD), -1, 1, 1, 1, 1, 0, "u 'Ex02TrackerSD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEx02RootManager(void) {
   /* Ex02RootManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02RootManager));
   G__memfunc_setup("Ex02RootManager",1406,G__example02Cint_539_0_1, 105, G__get_linked_tagnum(&G__example02CintLN_Ex02RootManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - projectName i 'FileMode' - 0 - fileMode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ex02RootManager",1406,G__example02Cint_539_0_2, 105, G__get_linked_tagnum(&G__example02CintLN_Ex02RootManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__example02Cint_539_0_3, 85, G__get_linked_tagnum(&G__example02CintLN_Ex02RootManager), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Ex02RootManager* (*)())(&Ex02RootManager::Instance) ), 0);
   G__memfunc_setup("Register",837,G__example02Cint_539_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - className "
"Y - - 0 - objAddress", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__example02Cint_539_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteAll",804,G__example02Cint_539_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEvent",894,G__example02Cint_539_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__example02Cint_539_0_8, 85, G__get_linked_tagnum(&G__example02CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Ex02RootManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__example02Cint_539_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02RootManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__example02Cint_539_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Ex02RootManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__example02Cint_539_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Ex02RootManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__example02CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__example02Cint_539_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__example02Cint_539_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02RootManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__example02Cint_539_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex02RootManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__example02Cint_539_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02RootManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__example02Cint_539_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex02RootManager::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Ex02RootManager", 1406, G__example02Cint_539_0_20, (int) ('i'), G__get_linked_tagnum(&G__example02CintLN_Ex02RootManager), -1, 0, 1, 1, 1, 0, "u 'Ex02RootManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Ex02RootManager", 1532, G__example02Cint_539_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__example02Cint_539_0_22, (int) ('u'), G__get_linked_tagnum(&G__example02CintLN_Ex02RootManager), -1, 1, 1, 1, 1, 0, "u 'Ex02RootManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEx02MCStack(void) {
   /* Ex02MCStack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02MCStack));
   G__memfunc_setup("Ex02MCStack",933,G__example02Cint_540_0_1, 105, G__get_linked_tagnum(&G__example02CintLN_Ex02MCStack), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ex02MCStack",933,G__example02Cint_540_0_2, 105, G__get_linked_tagnum(&G__example02CintLN_Ex02MCStack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PushTrack",917,(G__InterfaceMethod) NULL,121, -1, -1, 0, 18, 1, 1, 0, 
"i - 'Int_t' 0 - toBeDone i - 'Int_t' 0 - parent "
"i - 'Int_t' 0 - pdg d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz "
"d - 'Double_t' 0 - e d - 'Double_t' 0 - vx "
"d - 'Double_t' 0 - vy d - 'Double_t' 0 - vz "
"d - 'Double_t' 0 - tof d - 'Double_t' 0 - polx "
"d - 'Double_t' 0 - poly d - 'Double_t' 0 - polz "
"i 'TMCProcess' - 0 - mech i - 'Int_t' 1 - ntr "
"d - 'Double_t' 0 - weight i - 'Int_t' 0 - is", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PopNextTrack",1219,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__example02CintLN_TParticle), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 1 - track", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PopPrimaryForTracking",2157,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__example02CintLN_TParticle), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__example02Cint_540_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCurrentTrack",1540,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - track", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetObjectNumber",1516,G__example02Cint_540_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNtrack",899,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNprimary",1138,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCurrentTrack",1528,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__example02CintLN_TParticle), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCurrentTrackNumber",2145,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCurrentParentTrackNumber",2763,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParticle",1108,G__example02Cint_540_0_15, 85, G__get_linked_tagnum(&G__example02CintLN_Ex02Particle), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__example02Cint_540_0_16, 85, G__get_linked_tagnum(&G__example02CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Ex02MCStack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__example02Cint_540_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02MCStack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__example02Cint_540_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Ex02MCStack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__example02Cint_540_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Ex02MCStack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__example02CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__example02Cint_540_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__example02Cint_540_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02MCStack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__example02Cint_540_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex02MCStack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__example02Cint_540_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02MCStack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__example02Cint_540_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex02MCStack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Ex02MCStack", 933, G__example02Cint_540_0_28, (int) ('i'), G__get_linked_tagnum(&G__example02CintLN_Ex02MCStack), -1, 0, 1, 1, 1, 0, "u 'Ex02MCStack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Ex02MCStack", 1059, G__example02Cint_540_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__example02Cint_540_0_30, (int) ('u'), G__get_linked_tagnum(&G__example02CintLN_Ex02MCStack), -1, 1, 1, 1, 1, 0, "u 'Ex02MCStack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEx02MCApplication(void) {
   /* Ex02MCApplication */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02MCApplication));
   G__memfunc_setup("Ex02MCApplication",1571,G__example02Cint_541_0_1, 105, G__get_linked_tagnum(&G__example02CintLN_Ex02MCApplication), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"i 'FileMode' - 0 'kWrite' fileMode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ex02MCApplication",1571,G__example02Cint_541_0_2, 105, G__get_linked_tagnum(&G__example02CintLN_Ex02MCApplication), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__example02Cint_541_0_3, 85, G__get_linked_tagnum(&G__example02CintLN_Ex02MCApplication), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Ex02MCApplication* (*)())(&Ex02MCApplication::Instance) ), 0);
   G__memfunc_setup("InitMC",548,G__example02Cint_541_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - setup", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunMC",453,G__example02Cint_541_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nofEvents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FinishRun",918,G__example02Cint_541_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructGeometry",1809,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitGeometry",1248,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GeneratePrimaries",1751,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BeginEvent",999,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BeginPrimary",1225,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreTrack",796,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Stepping",842,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostTrack",923,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FinishPrimary",1349,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FinishEvent",1123,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEvent",894,G__example02Cint_541_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOldGeometry",1431,G__example02Cint_541_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' oldGeometry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RegisterStack",1339,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__example02Cint_541_0_20, 85, G__get_linked_tagnum(&G__example02CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Ex02MCApplication::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__example02Cint_541_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02MCApplication::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__example02Cint_541_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Ex02MCApplication::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__example02Cint_541_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Ex02MCApplication::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__example02CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__example02Cint_541_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__example02Cint_541_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02MCApplication::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__example02Cint_541_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex02MCApplication::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__example02Cint_541_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02MCApplication::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__example02Cint_541_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex02MCApplication::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Ex02MCApplication", 1571, G__example02Cint_541_0_32, (int) ('i'), G__get_linked_tagnum(&G__example02CintLN_Ex02MCApplication), -1, 0, 1, 1, 1, 0, "u 'Ex02MCApplication' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Ex02MCApplication", 1697, G__example02Cint_541_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__example02Cint_541_0_34, (int) ('u'), G__get_linked_tagnum(&G__example02CintLN_Ex02MCApplication), -1, 1, 1, 1, 1, 0, "u 'Ex02MCApplication' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEx02Particle(void) {
   /* Ex02Particle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__example02CintLN_Ex02Particle));
   G__memfunc_setup("Ex02Particle",1107,G__example02Cint_549_0_1, 105, G__get_linked_tagnum(&G__example02CintLN_Ex02Particle), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - id U 'TParticle' - 0 - particle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ex02Particle",1107,G__example02Cint_549_0_2, 105, G__get_linked_tagnum(&G__example02CintLN_Ex02Particle), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - id U 'TParticle' - 0 - particle "
"U 'Ex02Particle' - 0 - mother", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ex02Particle",1107,G__example02Cint_549_0_3, 105, G__get_linked_tagnum(&G__example02CintLN_Ex02Particle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMother",923,G__example02Cint_549_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Ex02Particle' - 0 - particle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDaughter",1085,G__example02Cint_549_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Ex02Particle' - 0 - particle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintDaughters",1460,G__example02Cint_549_0_7, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__example02Cint_549_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticle",1108,G__example02Cint_549_0_9, 85, G__get_linked_tagnum(&G__example02CintLN_TParticle), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMother",911,G__example02Cint_549_0_10, 85, G__get_linked_tagnum(&G__example02CintLN_Ex02Particle), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNofDaughters",1514,G__example02Cint_549_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDaughter",1108,G__example02Cint_549_0_12, 85, G__get_linked_tagnum(&G__example02CintLN_Ex02Particle), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__example02Cint_549_0_13, 85, G__get_linked_tagnum(&G__example02CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Ex02Particle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__example02Cint_549_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02Particle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__example02Cint_549_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Ex02Particle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__example02Cint_549_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Ex02Particle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__example02CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__example02Cint_549_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__example02Cint_549_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02Particle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__example02Cint_549_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex02Particle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__example02Cint_549_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex02Particle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__example02Cint_549_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex02Particle::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Ex02Particle", 1233, G__example02Cint_549_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncstacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR(void) {
   /* stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__example02CintLN_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR));
   G__memfunc_setup("stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >",5992,G__example02Cint_585_0_1, 105, G__get_linked_tagnum(&G__example02CintLN_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__example02Cint_585_0_2, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__example02Cint_585_0_3, 107, -1, G__defined_typename("stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("top",339,G__example02Cint_585_0_4, 85, G__get_linked_tagnum(&G__example02CintLN_Ex02Particle), G__defined_typename("stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >::value_type"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push",448,G__example02Cint_585_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Ex02Particle' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop",335,G__example02Cint_585_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >", 5992, G__example02Cint_585_0_7, (int) ('i'), 
G__get_linked_tagnum(&G__example02CintLN_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >", 6118, G__example02Cint_585_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__example02Cint_585_0_9, (int) ('u'), G__get_linked_tagnum(&G__example02CintLN_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncexample02Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__example02CintLN_FileMode),-1,-1,1,"kRead=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__example02CintLN_FileMode),-1,-1,1,"kWrite=1",0,(char*)NULL);
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalexample02Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcexample02Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__example02CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__example02CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__example02CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__example02CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__example02CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_Ex02ChamberParameterisation = { "Ex02ChamberParameterisation" , 99 , -1 };
G__linked_taginfo G__example02CintLN_Ex02DetectorConstruction = { "Ex02DetectorConstruction" , 99 , -1 };
G__linked_taginfo G__example02CintLN_Ex02DetectorConstructionOld = { "Ex02DetectorConstructionOld" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TVirtualMagField = { "TVirtualMagField" , 99 , -1 };
G__linked_taginfo G__example02CintLN_Ex02MagField = { "Ex02MagField" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TVirtualMCApplication = { "TVirtualMCApplication" , 99 , -1 };
G__linked_taginfo G__example02CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__example02CintLN_Ex02TrackerHit = { "Ex02TrackerHit" , 99 , -1 };
G__linked_taginfo G__example02CintLN_Ex02TrackerSD = { "Ex02TrackerSD" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__example02CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TParticle = { "TParticle" , 99 , -1 };
G__linked_taginfo G__example02CintLN_FileMode = { "FileMode" , 101 , -1 };
G__linked_taginfo G__example02CintLN_Ex02RootManager = { "Ex02RootManager" , 99 , -1 };
G__linked_taginfo G__example02CintLN_Ex02MCStack = { "Ex02MCStack" , 99 , -1 };
G__linked_taginfo G__example02CintLN_Ex02MCApplication = { "Ex02MCApplication" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TRef = { "TRef" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TRefArray = { "TRefArray" , 99 , -1 };
G__linked_taginfo G__example02CintLN_Ex02Particle = { "Ex02Particle" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TMCProcess = { "TMCProcess" , 101 , -1 };
G__linked_taginfo G__example02CintLN_TVirtualMCStack = { "TVirtualMCStack" , 99 , -1 };
G__linked_taginfo G__example02CintLN_dequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgR = { "deque<Ex02Particle*,allocator<Ex02Particle*> >" , 99 , -1 };
G__linked_taginfo G__example02CintLN_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR = { "stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__example02CintLN_TVector3 = { "TVector3" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableexample02Cint() {
  G__example02CintLN_TClass.tagnum = -1 ;
  G__example02CintLN_TBuffer.tagnum = -1 ;
  G__example02CintLN_TMemberInspector.tagnum = -1 ;
  G__example02CintLN_TObject.tagnum = -1 ;
  G__example02CintLN_TNamed.tagnum = -1 ;
  G__example02CintLN_TString.tagnum = -1 ;
  G__example02CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__example02CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__example02CintLN_TObjArray.tagnum = -1 ;
  G__example02CintLN_TClonesArray.tagnum = -1 ;
  G__example02CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__example02CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__example02CintLN_Ex02ChamberParameterisation.tagnum = -1 ;
  G__example02CintLN_Ex02DetectorConstruction.tagnum = -1 ;
  G__example02CintLN_Ex02DetectorConstructionOld.tagnum = -1 ;
  G__example02CintLN_TVirtualMagField.tagnum = -1 ;
  G__example02CintLN_Ex02MagField.tagnum = -1 ;
  G__example02CintLN_TVirtualMCApplication.tagnum = -1 ;
  G__example02CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__example02CintLN_Ex02TrackerHit.tagnum = -1 ;
  G__example02CintLN_Ex02TrackerSD.tagnum = -1 ;
  G__example02CintLN_TTree.tagnum = -1 ;
  G__example02CintLN_TFile.tagnum = -1 ;
  G__example02CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__example02CintLN_TParticle.tagnum = -1 ;
  G__example02CintLN_FileMode.tagnum = -1 ;
  G__example02CintLN_Ex02RootManager.tagnum = -1 ;
  G__example02CintLN_Ex02MCStack.tagnum = -1 ;
  G__example02CintLN_Ex02MCApplication.tagnum = -1 ;
  G__example02CintLN_TRef.tagnum = -1 ;
  G__example02CintLN_TRefArray.tagnum = -1 ;
  G__example02CintLN_Ex02Particle.tagnum = -1 ;
  G__example02CintLN_TMCProcess.tagnum = -1 ;
  G__example02CintLN_TVirtualMCStack.tagnum = -1 ;
  G__example02CintLN_dequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgR.tagnum = -1 ;
  G__example02CintLN_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR.tagnum = -1 ;
  G__example02CintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__example02CintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__example02CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__example02CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__example02CintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__example02CintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__example02CintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__example02CintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__example02CintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__example02CintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__example02CintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__example02CintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__example02CintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__example02CintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__example02CintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__example02CintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__example02CintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__example02CintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__example02CintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__example02CintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__example02CintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__example02CintLN_TVector3.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableexample02Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__example02CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TString);
   G__get_linked_tagnum_fwd(&G__example02CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__example02CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__example02CintLN_Ex02ChamberParameterisation),sizeof(Ex02ChamberParameterisation),-1,324608,"Ex02ChamberParameterisation  ",G__setup_memvarEx02ChamberParameterisation,G__setup_memfuncEx02ChamberParameterisation);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__example02CintLN_Ex02DetectorConstruction),sizeof(Ex02DetectorConstruction),-1,292096,"Ex02DetectorConstruction",G__setup_memvarEx02DetectorConstruction,G__setup_memfuncEx02DetectorConstruction);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__example02CintLN_Ex02DetectorConstructionOld),sizeof(Ex02DetectorConstructionOld),-1,292096,"Ex02DetectorConstructionOld",G__setup_memvarEx02DetectorConstructionOld,G__setup_memfuncEx02DetectorConstructionOld);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TVirtualMagField);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__example02CintLN_Ex02MagField),sizeof(Ex02MagField),-1,327424,"Uniform magnetic field        ",G__setup_memvarEx02MagField,G__setup_memfuncEx02MagField);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TVirtualMCApplication);
   G__get_linked_tagnum_fwd(&G__example02CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__example02CintLN_Ex02TrackerHit),sizeof(Ex02TrackerHit),-1,292096,"Ex02TrackerHit  ",G__setup_memvarEx02TrackerHit,G__setup_memfuncEx02TrackerHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__example02CintLN_Ex02TrackerSD),sizeof(Ex02TrackerSD),-1,324864,"Ex02TrackerSD ",G__setup_memvarEx02TrackerSD,G__setup_memfuncEx02TrackerSD);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TTree);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TFile);
   G__get_linked_tagnum_fwd(&G__example02CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__example02CintLN_FileMode),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__example02CintLN_Ex02RootManager),sizeof(Ex02RootManager),-1,324864,"Root IO manager",G__setup_memvarEx02RootManager,G__setup_memfuncEx02RootManager);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__example02CintLN_Ex02MCStack),sizeof(Ex02MCStack),-1,324864,"Ex02MCStack",G__setup_memvarEx02MCStack,G__setup_memfuncEx02MCStack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__example02CintLN_Ex02MCApplication),sizeof(Ex02MCApplication),-1,324864,"Interface to MonteCarlo application",G__setup_memvarEx02MCApplication,G__setup_memfuncEx02MCApplication);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TRef);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TRefArray);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__example02CintLN_Ex02Particle),sizeof(Ex02Particle),-1,324864,"Extended TParticle",G__setup_memvarEx02Particle,G__setup_memfuncEx02Particle);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TMCProcess);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TVirtualMCStack);
   G__get_linked_tagnum_fwd(&G__example02CintLN_dequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__example02CintLN_stacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR),sizeof(stack<Ex02Particle*,deque<Ex02Particle*,allocator<Ex02Particle*> > >),-1,262400,(char*)NULL,G__setup_memvarstacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR,G__setup_memfuncstacklEEx02ParticlemUcOdequelEEx02ParticlemUcOallocatorlEEx02ParticlemUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__example02CintLN_TVector3);
}
extern "C" void G__cpp_setupexample02Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupexample02Cint()");
  G__set_cpp_environmentexample02Cint();
  G__cpp_setup_tagtableexample02Cint();

  G__cpp_setup_inheritanceexample02Cint();

  G__cpp_setup_typetableexample02Cint();

  G__cpp_setup_memvarexample02Cint();

  G__cpp_setup_memfuncexample02Cint();
  G__cpp_setup_globalexample02Cint();
  G__cpp_setup_funcexample02Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncexample02Cint();
  return;
}
class G__cpp_setup_initexample02Cint {
  public:
    G__cpp_setup_initexample02Cint() { G__add_setup_func("example02Cint",(G__incsetup)(&G__cpp_setupexample02Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initexample02Cint() { G__remove_setup_func("example02Cint"); }
};
G__cpp_setup_initexample02Cint G__cpp_setup_initializerexample02Cint;

