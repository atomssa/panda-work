//
// File generated by rootcint at Tue Jun 24 14:40:24 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIvol0dIpandadIworkdIhadesdItargetdIE01dItmpdItgt_linuxx8664gccdIexample01dIexample01Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "example01Cint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void Ex01DetectorConstructionOld_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Ex01DetectorConstructionOld(void *p = 0);
   static void *newArray_Ex01DetectorConstructionOld(Long_t size, void *p);
   static void delete_Ex01DetectorConstructionOld(void *p);
   static void deleteArray_Ex01DetectorConstructionOld(void *p);
   static void destruct_Ex01DetectorConstructionOld(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Ex01DetectorConstructionOld*)
   {
      ::Ex01DetectorConstructionOld *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Ex01DetectorConstructionOld >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Ex01DetectorConstructionOld", ::Ex01DetectorConstructionOld::Class_Version(), "./include/Ex01DetectorConstructionOld.h", 40,
                  typeid(::Ex01DetectorConstructionOld), DefineBehavior(ptr, ptr),
                  &::Ex01DetectorConstructionOld::Dictionary, isa_proxy, 4,
                  sizeof(::Ex01DetectorConstructionOld) );
      instance.SetNew(&new_Ex01DetectorConstructionOld);
      instance.SetNewArray(&newArray_Ex01DetectorConstructionOld);
      instance.SetDelete(&delete_Ex01DetectorConstructionOld);
      instance.SetDeleteArray(&deleteArray_Ex01DetectorConstructionOld);
      instance.SetDestructor(&destruct_Ex01DetectorConstructionOld);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Ex01DetectorConstructionOld*)
   {
      return GenerateInitInstanceLocal((::Ex01DetectorConstructionOld*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Ex01DetectorConstructionOld*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Ex01MCApplication_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Ex01MCApplication(void *p = 0);
   static void *newArray_Ex01MCApplication(Long_t size, void *p);
   static void delete_Ex01MCApplication(void *p);
   static void deleteArray_Ex01MCApplication(void *p);
   static void destruct_Ex01MCApplication(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Ex01MCApplication*)
   {
      ::Ex01MCApplication *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Ex01MCApplication >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Ex01MCApplication", ::Ex01MCApplication::Class_Version(), "./include/Ex01MCApplication.h", 34,
                  typeid(::Ex01MCApplication), DefineBehavior(ptr, ptr),
                  &::Ex01MCApplication::Dictionary, isa_proxy, 4,
                  sizeof(::Ex01MCApplication) );
      instance.SetNew(&new_Ex01MCApplication);
      instance.SetNewArray(&newArray_Ex01MCApplication);
      instance.SetDelete(&delete_Ex01MCApplication);
      instance.SetDeleteArray(&deleteArray_Ex01MCApplication);
      instance.SetDestructor(&destruct_Ex01MCApplication);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Ex01MCApplication*)
   {
      return GenerateInitInstanceLocal((::Ex01MCApplication*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Ex01MCApplication*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Ex01Particle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Ex01Particle(void *p = 0);
   static void *newArray_Ex01Particle(Long_t size, void *p);
   static void delete_Ex01Particle(void *p);
   static void deleteArray_Ex01Particle(void *p);
   static void destruct_Ex01Particle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Ex01Particle*)
   {
      ::Ex01Particle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Ex01Particle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Ex01Particle", ::Ex01Particle::Class_Version(), "./include/Ex01Particle.h", 34,
                  typeid(::Ex01Particle), DefineBehavior(ptr, ptr),
                  &::Ex01Particle::Dictionary, isa_proxy, 4,
                  sizeof(::Ex01Particle) );
      instance.SetNew(&new_Ex01Particle);
      instance.SetNewArray(&newArray_Ex01Particle);
      instance.SetDelete(&delete_Ex01Particle);
      instance.SetDeleteArray(&deleteArray_Ex01Particle);
      instance.SetDestructor(&destruct_Ex01Particle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Ex01Particle*)
   {
      return GenerateInitInstanceLocal((::Ex01Particle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Ex01Particle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Ex01MCStack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Ex01MCStack(void *p = 0);
   static void *newArray_Ex01MCStack(Long_t size, void *p);
   static void delete_Ex01MCStack(void *p);
   static void deleteArray_Ex01MCStack(void *p);
   static void destruct_Ex01MCStack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Ex01MCStack*)
   {
      ::Ex01MCStack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Ex01MCStack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Ex01MCStack", ::Ex01MCStack::Class_Version(), "./include/Ex01MCStack.h", 35,
                  typeid(::Ex01MCStack), DefineBehavior(ptr, ptr),
                  &::Ex01MCStack::Dictionary, isa_proxy, 4,
                  sizeof(::Ex01MCStack) );
      instance.SetNew(&new_Ex01MCStack);
      instance.SetNewArray(&newArray_Ex01MCStack);
      instance.SetDelete(&delete_Ex01MCStack);
      instance.SetDeleteArray(&deleteArray_Ex01MCStack);
      instance.SetDestructor(&destruct_Ex01MCStack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Ex01MCStack*)
   {
      return GenerateInitInstanceLocal((::Ex01MCStack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Ex01MCStack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *Ex01DetectorConstructionOld::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Ex01DetectorConstructionOld::Class_Name()
{
   return "Ex01DetectorConstructionOld";
}

//______________________________________________________________________________
const char *Ex01DetectorConstructionOld::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex01DetectorConstructionOld*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Ex01DetectorConstructionOld::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex01DetectorConstructionOld*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Ex01DetectorConstructionOld::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex01DetectorConstructionOld*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Ex01DetectorConstructionOld::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex01DetectorConstructionOld*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Ex01MCApplication::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Ex01MCApplication::Class_Name()
{
   return "Ex01MCApplication";
}

//______________________________________________________________________________
const char *Ex01MCApplication::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex01MCApplication*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Ex01MCApplication::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex01MCApplication*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Ex01MCApplication::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex01MCApplication*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Ex01MCApplication::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex01MCApplication*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Ex01Particle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Ex01Particle::Class_Name()
{
   return "Ex01Particle";
}

//______________________________________________________________________________
const char *Ex01Particle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex01Particle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Ex01Particle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex01Particle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Ex01Particle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex01Particle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Ex01Particle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex01Particle*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Ex01MCStack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Ex01MCStack::Class_Name()
{
   return "Ex01MCStack";
}

//______________________________________________________________________________
const char *Ex01MCStack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex01MCStack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Ex01MCStack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ex01MCStack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Ex01MCStack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex01MCStack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Ex01MCStack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ex01MCStack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void Ex01MCApplication::Streamer(TBuffer &R__b)
{
   // Stream an object of class Ex01MCApplication.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Ex01MCApplication::Class(),this);
   } else {
      R__b.WriteClassBuffer(Ex01MCApplication::Class(),this);
   }
}

//______________________________________________________________________________
void Ex01MCApplication::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Ex01MCApplication.
      TClass *R__cl = ::Ex01MCApplication::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStack", &fStack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMagField", &fMagField);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fImedAr", &fImedAr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fImedAl", &fImedAl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fImedPb", &fImedPb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOldGeometry", &fOldGeometry);
      TVirtualMCApplication::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Ex01MCApplication(void *p) {
      return  p ? new(p) ::Ex01MCApplication : new ::Ex01MCApplication;
   }
   static void *newArray_Ex01MCApplication(Long_t nElements, void *p) {
      return p ? new(p) ::Ex01MCApplication[nElements] : new ::Ex01MCApplication[nElements];
   }
   // Wrapper around operator delete
   static void delete_Ex01MCApplication(void *p) {
      delete ((::Ex01MCApplication*)p);
   }
   static void deleteArray_Ex01MCApplication(void *p) {
      delete [] ((::Ex01MCApplication*)p);
   }
   static void destruct_Ex01MCApplication(void *p) {
      typedef ::Ex01MCApplication current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Ex01MCApplication

//______________________________________________________________________________
void Ex01MCStack::Streamer(TBuffer &R__b)
{
   // Stream an object of class Ex01MCStack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Ex01MCStack::Class(),this);
   } else {
      R__b.WriteClassBuffer(Ex01MCStack::Class(),this);
   }
}

//______________________________________________________________________________
void Ex01MCStack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Ex01MCStack.
      TClass *R__cl = ::Ex01MCStack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStack", (void*)&fStack);
      R__insp.InspectMember("stack<Ex01Particle*>", (void*)&fStack, "fStack.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParticles", &fParticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrentTrack", &fCurrentTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPrimary", &fNPrimary);
      TVirtualMCStack::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Ex01MCStack(void *p) {
      return  p ? new(p) ::Ex01MCStack : new ::Ex01MCStack;
   }
   static void *newArray_Ex01MCStack(Long_t nElements, void *p) {
      return p ? new(p) ::Ex01MCStack[nElements] : new ::Ex01MCStack[nElements];
   }
   // Wrapper around operator delete
   static void delete_Ex01MCStack(void *p) {
      delete ((::Ex01MCStack*)p);
   }
   static void deleteArray_Ex01MCStack(void *p) {
      delete [] ((::Ex01MCStack*)p);
   }
   static void destruct_Ex01MCStack(void *p) {
      typedef ::Ex01MCStack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Ex01MCStack

//______________________________________________________________________________
void Ex01DetectorConstructionOld::Streamer(TBuffer &R__b)
{
   // Stream an object of class Ex01DetectorConstructionOld.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Ex01DetectorConstructionOld::Class(),this);
   } else {
      R__b.WriteClassBuffer(Ex01DetectorConstructionOld::Class(),this);
   }
}

//______________________________________________________________________________
void Ex01DetectorConstructionOld::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Ex01DetectorConstructionOld.
      TClass *R__cl = ::Ex01DetectorConstructionOld::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fImedAr", &fImedAr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fImedAl", &fImedAl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fImedPb", &fImedPb);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Ex01DetectorConstructionOld(void *p) {
      return  p ? new(p) ::Ex01DetectorConstructionOld : new ::Ex01DetectorConstructionOld;
   }
   static void *newArray_Ex01DetectorConstructionOld(Long_t nElements, void *p) {
      return p ? new(p) ::Ex01DetectorConstructionOld[nElements] : new ::Ex01DetectorConstructionOld[nElements];
   }
   // Wrapper around operator delete
   static void delete_Ex01DetectorConstructionOld(void *p) {
      delete ((::Ex01DetectorConstructionOld*)p);
   }
   static void deleteArray_Ex01DetectorConstructionOld(void *p) {
      delete [] ((::Ex01DetectorConstructionOld*)p);
   }
   static void destruct_Ex01DetectorConstructionOld(void *p) {
      typedef ::Ex01DetectorConstructionOld current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Ex01DetectorConstructionOld

//______________________________________________________________________________
void Ex01Particle::Streamer(TBuffer &R__b)
{
   // Stream an object of class Ex01Particle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Ex01Particle::Class(),this);
   } else {
      R__b.WriteClassBuffer(Ex01Particle::Class(),this);
   }
}

//______________________________________________________________________________
void Ex01Particle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Ex01Particle.
      TClass *R__cl = ::Ex01Particle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fID", &fID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParticle", &fParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMother", &fMother);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDaughters", &fDaughters);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Ex01Particle(void *p) {
      return  p ? new(p) ::Ex01Particle : new ::Ex01Particle;
   }
   static void *newArray_Ex01Particle(Long_t nElements, void *p) {
      return p ? new(p) ::Ex01Particle[nElements] : new ::Ex01Particle[nElements];
   }
   // Wrapper around operator delete
   static void delete_Ex01Particle(void *p) {
      delete ((::Ex01Particle*)p);
   }
   static void deleteArray_Ex01Particle(void *p) {
      delete [] ((::Ex01Particle*)p);
   }
   static void destruct_Ex01Particle(void *p) {
      typedef ::Ex01Particle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Ex01Particle

/********************************************************
* /vol0/panda/work/hades/target/E01/tmp/tgt_linuxx8664gcc/example01/example01Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableexample01Cint();

extern "C" void G__set_cpp_environmentexample01Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/Ex01DetectorConstructionOld.h");
  G__add_compiledheader("include/Ex01MCApplication.h");
  G__add_compiledheader("include/Ex01MCStack.h");
  G__add_compiledheader("include/Ex01Particle.h");
  G__cpp_reset_tagtableexample01Cint();
}
#include <new>
extern "C" int G__cpp_dllrevexample01Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Ex01DetectorConstructionOld */
static int G__example01Cint_183_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex01DetectorConstructionOld* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex01DetectorConstructionOld[n];
     } else {
       p = new((void*) gvp) Ex01DetectorConstructionOld[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex01DetectorConstructionOld;
     } else {
       p = new((void*) gvp) Ex01DetectorConstructionOld;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example01CintLN_Ex01DetectorConstructionOld));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_183_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex01DetectorConstructionOld*) G__getstructoffset())->ConstructMaterials();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_183_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex01DetectorConstructionOld*) G__getstructoffset())->ConstructVolumes();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_183_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ex01DetectorConstructionOld::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_183_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex01DetectorConstructionOld::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_183_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Ex01DetectorConstructionOld::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_183_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Ex01DetectorConstructionOld::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_183_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex01DetectorConstructionOld*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_183_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex01DetectorConstructionOld::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_183_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex01DetectorConstructionOld::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_183_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex01DetectorConstructionOld::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_183_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex01DetectorConstructionOld::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__example01Cint_183_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Ex01DetectorConstructionOld* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Ex01DetectorConstructionOld(*(Ex01DetectorConstructionOld*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example01CintLN_Ex01DetectorConstructionOld));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Ex01DetectorConstructionOld G__TEx01DetectorConstructionOld;
static int G__example01Cint_183_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Ex01DetectorConstructionOld*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Ex01DetectorConstructionOld*) (soff+(sizeof(Ex01DetectorConstructionOld)*i)))->~G__TEx01DetectorConstructionOld();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Ex01DetectorConstructionOld*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Ex01DetectorConstructionOld*) (soff))->~G__TEx01DetectorConstructionOld();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__example01Cint_183_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex01DetectorConstructionOld* dest = (Ex01DetectorConstructionOld*) G__getstructoffset();
   *dest = *(Ex01DetectorConstructionOld*) libp->para[0].ref;
   const Ex01DetectorConstructionOld& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Ex01MCApplication */
static int G__example01Cint_189_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex01MCApplication* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Ex01MCApplication((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) Ex01MCApplication((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example01CintLN_Ex01MCApplication));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_189_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex01MCApplication* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex01MCApplication[n];
     } else {
       p = new((void*) gvp) Ex01MCApplication[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex01MCApplication;
     } else {
       p = new((void*) gvp) Ex01MCApplication;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example01CintLN_Ex01MCApplication));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_189_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ex01MCApplication::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_189_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex01MCApplication*) G__getstructoffset())->InitMC((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_189_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex01MCApplication*) G__getstructoffset())->RunMC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_189_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex01MCApplication*) G__getstructoffset())->FinishRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_189_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Ex01MCApplication*) G__getstructoffset())->SetOldGeometry((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Ex01MCApplication*) G__getstructoffset())->SetOldGeometry();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_189_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex01MCApplication*) G__getstructoffset())->TestVMCGeometryGetters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_189_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ex01MCApplication::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_189_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex01MCApplication::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_189_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Ex01MCApplication::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_189_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Ex01MCApplication::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_189_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex01MCApplication*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_189_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex01MCApplication::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_189_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex01MCApplication::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_189_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex01MCApplication::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_189_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex01MCApplication::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__example01Cint_189_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Ex01MCApplication* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Ex01MCApplication(*(Ex01MCApplication*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example01CintLN_Ex01MCApplication));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Ex01MCApplication G__TEx01MCApplication;
static int G__example01Cint_189_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Ex01MCApplication*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Ex01MCApplication*) (soff+(sizeof(Ex01MCApplication)*i)))->~G__TEx01MCApplication();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Ex01MCApplication*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Ex01MCApplication*) (soff))->~G__TEx01MCApplication();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__example01Cint_189_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex01MCApplication* dest = (Ex01MCApplication*) G__getstructoffset();
   *dest = *(Ex01MCApplication*) libp->para[0].ref;
   const Ex01MCApplication& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Ex01Particle */
static int G__example01Cint_190_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex01Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Ex01Particle((Int_t) G__int(libp->para[0]), (TParticle*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) Ex01Particle((Int_t) G__int(libp->para[0]), (TParticle*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example01CintLN_Ex01Particle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_190_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex01Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Ex01Particle(
(Int_t) G__int(libp->para[0]), (TParticle*) G__int(libp->para[1])
, (Ex01Particle*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) Ex01Particle(
(Int_t) G__int(libp->para[0]), (TParticle*) G__int(libp->para[1])
, (Ex01Particle*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example01CintLN_Ex01Particle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_190_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex01Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex01Particle[n];
     } else {
       p = new((void*) gvp) Ex01Particle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex01Particle;
     } else {
       p = new((void*) gvp) Ex01Particle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example01CintLN_Ex01Particle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_190_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex01Particle*) G__getstructoffset())->SetMother((Ex01Particle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_190_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex01Particle*) G__getstructoffset())->AddDaughter((Ex01Particle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_190_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Ex01Particle*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_190_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Ex01Particle*) G__getstructoffset())->GetParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_190_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Ex01Particle*) G__getstructoffset())->GetMother());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_190_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Ex01Particle*) G__getstructoffset())->GetNofDaughters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_190_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Ex01Particle*) G__getstructoffset())->GetDaughter((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_190_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ex01Particle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_190_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex01Particle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_190_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Ex01Particle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_190_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Ex01Particle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_190_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex01Particle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_190_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex01Particle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_190_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex01Particle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_190_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex01Particle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_190_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex01Particle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__example01Cint_190_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Ex01Particle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Ex01Particle(*(Ex01Particle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example01CintLN_Ex01Particle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Ex01Particle G__TEx01Particle;
static int G__example01Cint_190_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Ex01Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Ex01Particle*) (soff+(sizeof(Ex01Particle)*i)))->~G__TEx01Particle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Ex01Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Ex01Particle*) (soff))->~G__TEx01Particle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__example01Cint_190_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex01Particle* dest = (Ex01Particle*) G__getstructoffset();
   *dest = *(Ex01Particle*) libp->para[0].ref;
   const Ex01Particle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Ex01MCStack */
static int G__example01Cint_220_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex01MCStack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Ex01MCStack((Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Ex01MCStack((Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example01CintLN_Ex01MCStack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_220_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex01MCStack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex01MCStack[n];
     } else {
       p = new((void*) gvp) Ex01MCStack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ex01MCStack;
     } else {
       p = new((void*) gvp) Ex01MCStack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example01CintLN_Ex01MCStack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_220_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ex01MCStack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_220_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex01MCStack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_220_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Ex01MCStack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_220_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Ex01MCStack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_220_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ex01MCStack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_220_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex01MCStack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_220_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex01MCStack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_220_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ex01MCStack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__example01Cint_220_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ex01MCStack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__example01Cint_220_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Ex01MCStack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Ex01MCStack(*(Ex01MCStack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__example01CintLN_Ex01MCStack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Ex01MCStack G__TEx01MCStack;
static int G__example01Cint_220_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Ex01MCStack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Ex01MCStack*) (soff+(sizeof(Ex01MCStack)*i)))->~G__TEx01MCStack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Ex01MCStack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Ex01MCStack*) (soff))->~G__TEx01MCStack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__example01Cint_220_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ex01MCStack* dest = (Ex01MCStack*) G__getstructoffset();
   *dest = *(Ex01MCStack*) libp->para[0].ref;
   const Ex01MCStack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Ex01DetectorConstructionOld */

/* Ex01MCApplication */

/* Ex01Particle */

/* Ex01MCStack */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncexample01Cint {
 public:
  G__Sizep2memfuncexample01Cint(): p(&G__Sizep2memfuncexample01Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncexample01Cint::*p)();
};

size_t G__get_sizep2memfuncexample01Cint()
{
  G__Sizep2memfuncexample01Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceexample01Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__example01CintLN_Ex01DetectorConstructionOld))) {
     Ex01DetectorConstructionOld *G__Lderived;
     G__Lderived=(Ex01DetectorConstructionOld*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example01CintLN_Ex01DetectorConstructionOld),G__get_linked_tagnum(&G__example01CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__example01CintLN_Ex01MCApplication))) {
     Ex01MCApplication *G__Lderived;
     G__Lderived=(Ex01MCApplication*)0x1000;
     {
       TVirtualMCApplication *G__Lpbase=(TVirtualMCApplication*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example01CintLN_Ex01MCApplication),G__get_linked_tagnum(&G__example01CintLN_TVirtualMCApplication),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example01CintLN_Ex01MCApplication),G__get_linked_tagnum(&G__example01CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example01CintLN_Ex01MCApplication),G__get_linked_tagnum(&G__example01CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__example01CintLN_Ex01Particle))) {
     Ex01Particle *G__Lderived;
     G__Lderived=(Ex01Particle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example01CintLN_Ex01Particle),G__get_linked_tagnum(&G__example01CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__example01CintLN_Ex01MCStack))) {
     Ex01MCStack *G__Lderived;
     G__Lderived=(Ex01MCStack*)0x1000;
     {
       TVirtualMCStack *G__Lpbase=(TVirtualMCStack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example01CintLN_Ex01MCStack),G__get_linked_tagnum(&G__example01CintLN_TVirtualMCStack),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__example01CintLN_Ex01MCStack),G__get_linked_tagnum(&G__example01CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableexample01Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__example01CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__example01CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__example01CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__example01CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__example01CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__example01CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__example01CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__example01CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__example01CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__example01CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<Ex01Particle*>",117,G__get_linked_tagnum(&G__example01CintLN_dequelEEx01ParticlemUcOallocatorlEEx01ParticlemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<Ex01Particle*>",117,G__get_linked_tagnum(&G__example01CintLN_stacklEEx01ParticlemUcOdequelEEx01ParticlemUcOallocatorlEEx01ParticlemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Ex01DetectorConstructionOld */
static void G__setup_memvarEx01DetectorConstructionOld(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__example01CintLN_Ex01DetectorConstructionOld));
   { Ex01DetectorConstructionOld *p; p=(Ex01DetectorConstructionOld*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fImedAr=",0,"/< The Argon medium Id");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fImedAl=",0,"/< The Aluminium medium Id ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fImedPb=",0,"/< The Lead medium Id");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example01CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Ex01MCApplication */
static void G__setup_memvarEx01MCApplication(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__example01CintLN_Ex01MCApplication));
   { Ex01MCApplication *p; p=(Ex01MCApplication*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example01CintLN_TVirtualMCStack),-1,-1,4,"fStack=",0,"/< The VMC stack");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example01CintLN_TVirtualMagField),-1,-1,4,"fMagField=",0,"/< The magnetic field ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fImedAr=",0,"/< The Argon gas medium Id");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fImedAl=",0,"/< The Aluminium medium Id");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fImedPb=",0,"/< The Lead medium Id");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fOldGeometry=",0,"/< Option for geometry definition");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example01CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Ex01Particle */
static void G__setup_memvarEx01Particle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__example01CintLN_Ex01Particle));
   { Ex01Particle *p; p=(Ex01Particle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fID=",0,"/< The particle Id");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example01CintLN_TParticle),-1,-1,4,"fParticle=",0,"/< The particle definition");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example01CintLN_Ex01Particle),-1,-1,4,"fMother=",0,"/< The particle mother ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example01CintLN_TObjArray),-1,-1,4,"fDaughters=",0,"/< The particle daughters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example01CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Ex01MCStack */
static void G__setup_memvarEx01MCStack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__example01CintLN_Ex01MCStack));
   { Ex01MCStack *p; p=(Ex01MCStack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__example01CintLN_stacklEEx01ParticlemUcOdequelEEx01ParticlemUcOallocatorlEEx01ParticlemUgRsPgRsPgR),G__defined_typename("stack<Ex01Particle*>"),-1,4,"fStack=",0,"!< The stack of particles (transient)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example01CintLN_TObjArray),-1,-1,4,"fParticles=",0,"/< The array of particle (persistent)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCurrentTrack=",0,"/< The current track number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNPrimary=",0,"/< The number of primaries");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__example01CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarexample01Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncEx01DetectorConstructionOld(void) {
   /* Ex01DetectorConstructionOld */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__example01CintLN_Ex01DetectorConstructionOld));
   G__memfunc_setup("Ex01DetectorConstructionOld",2690,G__example01Cint_183_0_1, 105, G__get_linked_tagnum(&G__example01CintLN_Ex01DetectorConstructionOld), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructMaterials",1895,G__example01Cint_183_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructVolumes",1712,G__example01Cint_183_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__example01Cint_183_0_4, 85, G__get_linked_tagnum(&G__example01CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Ex01DetectorConstructionOld::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__example01Cint_183_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex01DetectorConstructionOld::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__example01Cint_183_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Ex01DetectorConstructionOld::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__example01Cint_183_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Ex01DetectorConstructionOld::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__example01CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__example01Cint_183_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__example01Cint_183_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex01DetectorConstructionOld::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__example01Cint_183_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex01DetectorConstructionOld::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__example01Cint_183_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex01DetectorConstructionOld::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__example01Cint_183_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex01DetectorConstructionOld::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Ex01DetectorConstructionOld", 2690, G__example01Cint_183_0_16, (int) ('i'), 
G__get_linked_tagnum(&G__example01CintLN_Ex01DetectorConstructionOld), -1, 0, 1, 1, 1, 0, "u 'Ex01DetectorConstructionOld' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Ex01DetectorConstructionOld", 2816, G__example01Cint_183_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__example01Cint_183_0_18, (int) ('u'), G__get_linked_tagnum(&G__example01CintLN_Ex01DetectorConstructionOld), -1, 1, 1, 1, 1, 0, "u 'Ex01DetectorConstructionOld' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEx01MCApplication(void) {
   /* Ex01MCApplication */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__example01CintLN_Ex01MCApplication));
   G__memfunc_setup("Ex01MCApplication",1570,G__example01Cint_189_0_1, 105, G__get_linked_tagnum(&G__example01CintLN_Ex01MCApplication), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ex01MCApplication",1570,G__example01Cint_189_0_2, 105, G__get_linked_tagnum(&G__example01CintLN_Ex01MCApplication), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__example01Cint_189_0_3, 85, G__get_linked_tagnum(&G__example01CintLN_Ex01MCApplication), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Ex01MCApplication* (*)())(&Ex01MCApplication::Instance) ), 0);
   G__memfunc_setup("InitMC",548,G__example01Cint_189_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - setup", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunMC",453,G__example01Cint_189_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nofEvents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FinishRun",918,G__example01Cint_189_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructGeometry",1809,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitGeometry",1248,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GeneratePrimaries",1751,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BeginEvent",999,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BeginPrimary",1225,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreTrack",796,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Stepping",842,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PostTrack",923,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FinishPrimary",1349,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FinishEvent",1123,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetOldGeometry",1431,G__example01Cint_189_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' oldGeometry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TestVMCGeometryGetters",2224,G__example01Cint_189_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructMaterials",1895,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructVolumes",1712,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__example01Cint_189_0_21, 85, G__get_linked_tagnum(&G__example01CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Ex01MCApplication::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__example01Cint_189_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex01MCApplication::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__example01Cint_189_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Ex01MCApplication::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__example01Cint_189_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Ex01MCApplication::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__example01CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__example01Cint_189_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__example01Cint_189_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex01MCApplication::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__example01Cint_189_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex01MCApplication::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__example01Cint_189_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex01MCApplication::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__example01Cint_189_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex01MCApplication::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Ex01MCApplication", 1570, G__example01Cint_189_0_33, (int) ('i'), G__get_linked_tagnum(&G__example01CintLN_Ex01MCApplication), -1, 0, 1, 1, 1, 0, "u 'Ex01MCApplication' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Ex01MCApplication", 1696, G__example01Cint_189_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__example01Cint_189_0_35, (int) ('u'), G__get_linked_tagnum(&G__example01CintLN_Ex01MCApplication), -1, 1, 1, 1, 1, 0, "u 'Ex01MCApplication' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEx01Particle(void) {
   /* Ex01Particle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__example01CintLN_Ex01Particle));
   G__memfunc_setup("Ex01Particle",1106,G__example01Cint_190_0_1, 105, G__get_linked_tagnum(&G__example01CintLN_Ex01Particle), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - id U 'TParticle' - 0 - particle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ex01Particle",1106,G__example01Cint_190_0_2, 105, G__get_linked_tagnum(&G__example01CintLN_Ex01Particle), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - id U 'TParticle' - 0 - particle "
"U 'Ex01Particle' - 0 - mother", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ex01Particle",1106,G__example01Cint_190_0_3, 105, G__get_linked_tagnum(&G__example01CintLN_Ex01Particle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMother",923,G__example01Cint_190_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Ex01Particle' - 0 - particle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDaughter",1085,G__example01Cint_190_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Ex01Particle' - 0 - particle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__example01Cint_190_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticle",1108,G__example01Cint_190_0_7, 85, G__get_linked_tagnum(&G__example01CintLN_TParticle), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMother",911,G__example01Cint_190_0_8, 85, G__get_linked_tagnum(&G__example01CintLN_Ex01Particle), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNofDaughters",1514,G__example01Cint_190_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDaughter",1108,G__example01Cint_190_0_10, 85, G__get_linked_tagnum(&G__example01CintLN_Ex01Particle), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__example01Cint_190_0_11, 85, G__get_linked_tagnum(&G__example01CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Ex01Particle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__example01Cint_190_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex01Particle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__example01Cint_190_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Ex01Particle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__example01Cint_190_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Ex01Particle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__example01CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__example01Cint_190_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__example01Cint_190_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex01Particle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__example01Cint_190_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex01Particle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__example01Cint_190_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex01Particle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__example01Cint_190_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex01Particle::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Ex01Particle", 1106, G__example01Cint_190_0_23, (int) ('i'), G__get_linked_tagnum(&G__example01CintLN_Ex01Particle), -1, 0, 1, 1, 1, 0, "u 'Ex01Particle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Ex01Particle", 1232, G__example01Cint_190_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__example01Cint_190_0_25, (int) ('u'), G__get_linked_tagnum(&G__example01CintLN_Ex01Particle), -1, 1, 1, 1, 1, 0, "u 'Ex01Particle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEx01MCStack(void) {
   /* Ex01MCStack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__example01CintLN_Ex01MCStack));
   G__memfunc_setup("Ex01MCStack",932,G__example01Cint_220_0_1, 105, G__get_linked_tagnum(&G__example01CintLN_Ex01MCStack), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ex01MCStack",932,G__example01Cint_220_0_2, 105, G__get_linked_tagnum(&G__example01CintLN_Ex01MCStack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PushTrack",917,(G__InterfaceMethod) NULL,121, -1, -1, 0, 18, 1, 1, 0, 
"i - 'Int_t' 0 - toBeDone i - 'Int_t' 0 - parent "
"i - 'Int_t' 0 - pdg d - 'Double_t' 0 - px "
"d - 'Double_t' 0 - py d - 'Double_t' 0 - pz "
"d - 'Double_t' 0 - e d - 'Double_t' 0 - vx "
"d - 'Double_t' 0 - vy d - 'Double_t' 0 - vz "
"d - 'Double_t' 0 - tof d - 'Double_t' 0 - polx "
"d - 'Double_t' 0 - poly d - 'Double_t' 0 - polz "
"i 'TMCProcess' - 0 - mech i - 'Int_t' 1 - ntr "
"d - 'Double_t' 0 - weight i - 'Int_t' 0 - is", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PopNextTrack",1219,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__example01CintLN_TParticle), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 1 - itrack", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PopPrimaryForTracking",2157,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__example01CintLN_TParticle), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCurrentTrack",1540,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - itrack", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNtrack",899,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNprimary",1138,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCurrentTrack",1528,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__example01CintLN_TParticle), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCurrentTrackNumber",2145,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCurrentParentTrackNumber",2763,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParticle",1108,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__example01CintLN_Ex01Particle), -1, 0, 1, 1, 4, 8, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__example01Cint_220_0_13, 85, G__get_linked_tagnum(&G__example01CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Ex01MCStack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__example01Cint_220_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex01MCStack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__example01Cint_220_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Ex01MCStack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__example01Cint_220_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Ex01MCStack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__example01CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__example01Cint_220_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__example01Cint_220_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex01MCStack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__example01Cint_220_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex01MCStack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__example01Cint_220_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ex01MCStack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__example01Cint_220_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ex01MCStack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Ex01MCStack", 932, G__example01Cint_220_0_25, (int) ('i'), G__get_linked_tagnum(&G__example01CintLN_Ex01MCStack), -1, 0, 1, 1, 1, 0, "u 'Ex01MCStack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Ex01MCStack", 1058, G__example01Cint_220_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__example01Cint_220_0_27, (int) ('u'), G__get_linked_tagnum(&G__example01CintLN_Ex01MCStack), -1, 1, 1, 1, 1, 0, "u 'Ex01MCStack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncexample01Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalexample01Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcexample01Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__example01CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__example01CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__example01CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__example01CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__example01CintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__example01CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__example01CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__example01CintLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__example01CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__example01CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__example01CintLN_Ex01DetectorConstructionOld = { "Ex01DetectorConstructionOld" , 99 , -1 };
G__linked_taginfo G__example01CintLN_TVirtualMCApplication = { "TVirtualMCApplication" , 99 , -1 };
G__linked_taginfo G__example01CintLN_TMCProcess = { "TMCProcess" , 101 , -1 };
G__linked_taginfo G__example01CintLN_TParticle = { "TParticle" , 99 , -1 };
G__linked_taginfo G__example01CintLN_TVirtualMCStack = { "TVirtualMCStack" , 99 , -1 };
G__linked_taginfo G__example01CintLN_TVirtualMagField = { "TVirtualMagField" , 99 , -1 };
G__linked_taginfo G__example01CintLN_Ex01MCApplication = { "Ex01MCApplication" , 99 , -1 };
G__linked_taginfo G__example01CintLN_Ex01Particle = { "Ex01Particle" , 99 , -1 };
G__linked_taginfo G__example01CintLN_Ex01MCStack = { "Ex01MCStack" , 99 , -1 };
G__linked_taginfo G__example01CintLN_dequelEEx01ParticlemUcOallocatorlEEx01ParticlemUgRsPgR = { "deque<Ex01Particle*,allocator<Ex01Particle*> >" , 99 , -1 };
G__linked_taginfo G__example01CintLN_stacklEEx01ParticlemUcOdequelEEx01ParticlemUcOallocatorlEEx01ParticlemUgRsPgRsPgR = { "stack<Ex01Particle*,deque<Ex01Particle*,allocator<Ex01Particle*> > >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableexample01Cint() {
  G__example01CintLN_TClass.tagnum = -1 ;
  G__example01CintLN_TBuffer.tagnum = -1 ;
  G__example01CintLN_TMemberInspector.tagnum = -1 ;
  G__example01CintLN_TObject.tagnum = -1 ;
  G__example01CintLN_TNamed.tagnum = -1 ;
  G__example01CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__example01CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__example01CintLN_TObjArray.tagnum = -1 ;
  G__example01CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__example01CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__example01CintLN_Ex01DetectorConstructionOld.tagnum = -1 ;
  G__example01CintLN_TVirtualMCApplication.tagnum = -1 ;
  G__example01CintLN_TMCProcess.tagnum = -1 ;
  G__example01CintLN_TParticle.tagnum = -1 ;
  G__example01CintLN_TVirtualMCStack.tagnum = -1 ;
  G__example01CintLN_TVirtualMagField.tagnum = -1 ;
  G__example01CintLN_Ex01MCApplication.tagnum = -1 ;
  G__example01CintLN_Ex01Particle.tagnum = -1 ;
  G__example01CintLN_Ex01MCStack.tagnum = -1 ;
  G__example01CintLN_dequelEEx01ParticlemUcOallocatorlEEx01ParticlemUgRsPgR.tagnum = -1 ;
  G__example01CintLN_stacklEEx01ParticlemUcOdequelEEx01ParticlemUcOallocatorlEEx01ParticlemUgRsPgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableexample01Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__example01CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__example01CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__example01CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__example01CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__example01CintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__example01CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__example01CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__example01CintLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__example01CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__example01CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__example01CintLN_Ex01DetectorConstructionOld),sizeof(Ex01DetectorConstructionOld),-1,292096,"Ex01DetectorConstructionOld",G__setup_memvarEx01DetectorConstructionOld,G__setup_memfuncEx01DetectorConstructionOld);
   G__get_linked_tagnum_fwd(&G__example01CintLN_TVirtualMCApplication);
   G__get_linked_tagnum_fwd(&G__example01CintLN_TMCProcess);
   G__get_linked_tagnum_fwd(&G__example01CintLN_TParticle);
   G__get_linked_tagnum_fwd(&G__example01CintLN_TVirtualMCStack);
   G__get_linked_tagnum_fwd(&G__example01CintLN_TVirtualMagField);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__example01CintLN_Ex01MCApplication),sizeof(Ex01MCApplication),-1,324864,"Interface to MonteCarlo application",G__setup_memvarEx01MCApplication,G__setup_memfuncEx01MCApplication);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__example01CintLN_Ex01Particle),sizeof(Ex01Particle),-1,324864,"Extended TParticle",G__setup_memvarEx01Particle,G__setup_memfuncEx01Particle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__example01CintLN_Ex01MCStack),sizeof(Ex01MCStack),-1,324864,"Ex01MCStack",G__setup_memvarEx01MCStack,G__setup_memfuncEx01MCStack);
   G__get_linked_tagnum_fwd(&G__example01CintLN_dequelEEx01ParticlemUcOallocatorlEEx01ParticlemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__example01CintLN_stacklEEx01ParticlemUcOdequelEEx01ParticlemUcOallocatorlEEx01ParticlemUgRsPgRsPgR);
}
extern "C" void G__cpp_setupexample01Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupexample01Cint()");
  G__set_cpp_environmentexample01Cint();
  G__cpp_setup_tagtableexample01Cint();

  G__cpp_setup_inheritanceexample01Cint();

  G__cpp_setup_typetableexample01Cint();

  G__cpp_setup_memvarexample01Cint();

  G__cpp_setup_memfuncexample01Cint();
  G__cpp_setup_globalexample01Cint();
  G__cpp_setup_funcexample01Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncexample01Cint();
  return;
}
class G__cpp_setup_initexample01Cint {
  public:
    G__cpp_setup_initexample01Cint() { G__add_setup_func("example01Cint",(G__incsetup)(&G__cpp_setupexample01Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initexample01Cint() { G__remove_setup_func("example01Cint"); }
};
G__cpp_setup_initexample01Cint G__cpp_setup_initializerexample01Cint;

